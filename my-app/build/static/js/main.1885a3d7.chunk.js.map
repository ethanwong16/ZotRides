{"version":3,"sources":["Host.js","components/Login/SignIn.js","components/Login.js","components/Home.js","components/Template/Header.js","components/SingleCar/ReservationForm.js","components/SingleCar.js","components/SingleLocation.js","components/Search/SearchModal/SearchForm.js","components/Search/SearchModal.js","components/NavBarModals/VehicleTypeModal.js","components/NavBar.js","components/Home/CarCard.js","components/SearchResults.js","components/MyCart/UpdateCartForm.js","components/MyCart/CartItem/UpdateModal.js","components/MyCart/CartItem.js","components/MyCart.js","components/Payments/PaymentForm.js","components/MyCart/ConfirmationCard.js","components/Payments.js","components/BrowseResults.js","components/BrowseBy/SearchForm.js","components/BrowseBy.js","components/EmployeeLogin/Dashboard/Table.js","components/EmployeeLogin/Dashboard/AddCarForm.js","components/EmployeeLogin/Dashboard/AddPickupForm.js","components/EmployeeLogin/Dashboard.js","components/EmployeeLogin/Dashboard/SignIn.js","components/EmployeeLogin.js","App.js","reportWebVitals.js","index.js"],"names":["props","initialValues","username","password","onSubmit","values","a","console","log","jQuery","ajax","dataType","method","data","url","HOST","success","resultData","JSON","stringify","status","setError","message","setSuccess","error","handleSubmit","handleChange","handleBlur","touched","errors","Form","noValidate","Group","Label","Control","type","name","id","onChange","onBlur","value","placeholder","isInvalid","Feedback","sitekey","recaptcha","Button","variant","to","useState","setForm","isLoading","setLoading","Container","className","Row","Col","Card","active","spinner","text","Body","SignIn","switchForm","event","target","Fade","in","getError","Home","Jumbotron","title","submitted","setSubmitted","carID","unitPrice","endDate","dateToString","startDate","setFieldValue","val","pickLocation","style","display","label","locations","map","location","index","input","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","SingleCar","EMPTY_CAR","car","setCar","redirect","setRedirect","useEffect","match","params","carId","Header","fluid","xs","textAlign","car_name","car_category","car_rating","car_votes","location_address","split","location_ids","ReservationForm","car_id","locationids","onClick","location_phone","SingleLocation","EMPTY_LOCATION","setLocation","locationId","cars_offered","cars_ids","location_id","complete","setComplete","defaultQuery","query","setQuery","setModalShow","model","make","window","reload","Modal","size","aria-labelledby","centered","closeButton","Title","SearchForm","categories","setCategories","redirectURL","setRedirectURL","handleClick","element","category","MyNav","modalShow","browseTypeModalShow","setBrowseTypeModalShow","VehicleTypeModal","show","onHide","SearchModal","Navbar","Brand","src","width","Toggle","aria-controls","Collapse","Nav","Link","CarCard","imageurl","setImageurl","jankyCarMake","Img","fontSize","handleCategorySelect","rating","votes","ListGroup","Item","phone","temp","cars","setCars","removeEmpty","object","itemID","showUpdate","setUpdate","backgroundImage","backgroundSize","backgroundPosition","UpdateCartForm","UpdateModal","price","daysInBetween","start","end","fDate","sDate","firstDate","secondDate","Math","round","abs","previousItems","CartItem","pickupLocation","firstName","firstname","lastName","lastname","ccNumber","cc","expDate","setFailed","setCompleted","setSalesId","completed","isFailed","salesId","animation","calculateTotal","ConfirmationCard","PaymentForm","sum","i","parseInt","setMessage","whoFirst","setFirst","ratingDescend","setRatingDescend","nameDescend","setNameDescend","sendSortQuery","results","key","retrace","sorting","ratingFirst","pageStatus","resultsPerPage","loading","letters","undefined","dbtitle","Table","striped","bordered","hover","fields","types","handleClose","Footer","errorMessage","address","phoneNumber","tables","setTables","Object","AddCarForm","AddPickupForm","defaultActiveKey","href","eventKey","Dashboard","LoginContainer","path","render","Login","EmployeeLoginContainer","DefaultContainer","exact","SearchResults","BrowseResults","MyCart","Payments","BrowseBy","App","basename","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1885a3d7.chunk.js","sourcesContent":["// export default \"https://localhost:8443/ZotRides/\";\nexport default \"https://3.15.201.93:8443/ZotRides/\";","import { Formik } from 'formik';\nimport { Form, Button } from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport jQuery from 'jquery';\nimport HOST from '../../Host';\nimport ReCaptcha from 'react-google-recaptcha';\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{username:\"c@email.com\", password:\"c2\"}}\n            onSubmit={(async (values) => {\n                // props.setLoading(true);\n                // console.log(JSON.parse(JSON.stringify(values)));\n                console.log(\"Sending\");\n                console.log(values);\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: values,\n                    url: HOST + \"api/login\",\n                    success: (resultData) => {\n                        //setCar(resultData[0]);\n                        //setLoading(false);\n                        console.log(JSON.stringify(resultData));\n                        if(resultData.status === \"fail\")\n                            props.setError(resultData.message);\n                        else\n                            props.setSuccess(true);\n                    },\n                    error: (resultData) => {\n                        props.setError(\"Invalid email/password\");\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"username\"}\n                            id={\"username\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.username}\n                            placeholder={\"Enter username\"}\n                            isInvalid={touched.username && errors.username}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type={\"password\"}\n                            name={\"password\"}\n                            id={\"password\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                            placeholder={\"Enter password\"}\n                            isInvalid={touched.password && errors.password}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <ReCaptcha\n                            sitekey={\"6LdFer8aAAAAACdsGnif7x0qN-yvVYsYPlyMCIAW\"}\n                            onChange={(value) => values.recaptcha = value}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Login</Button>\n                    <LinkContainer to={\"/_dashboard\"}>\n                        <Button variant={\"link\"} value={\"register\"}>Employee Login</Button>\n                    </LinkContainer>\n                </Form>\n            )}\n        </Formik>\n    )\n}","\nimport {useState} from 'react';\n\nimport {Card, Col, Container, Row, Fade} from \"react-bootstrap\";\nimport LoadingOverlay from 'react-loading-overlay';\n\nimport SignIn from \"./Login/SignIn\";\nimport {Redirect} from \"react-router\";\n\nexport default function() {\n    const [formType, setForm] = useState('login');\n    const [success, setSuccess] = useState(false);\n    const [error, setError] = useState();\n    const [isLoading, setLoading] = useState(false);\n\n    const switchForm = (event) => {\n        setError();\n        if(event.target.value === \"login\") {\n            setForm('login');\n        } else {\n            setForm('register');\n        }\n    }\n\n    const getError = (error) => {\n        let err = null;\n        error.message ? err = error.message : err = error;\n        return err;\n    }\n\n    if(success)\n        return (<Redirect to={\"/\"} />)\n\n    return(\n        <Container className={\"pt-5\"}>\n            <Row>\n                <Col>\n                    <h1>Welcome to ZotRides</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <LoadingOverlay active={isLoading} spinner text={'Logging in...'}>\n                        <Card.Body>\n                            <SignIn switchForm={switchForm} setLoading={setLoading} setError={setError} setSuccess={setSuccess}/>\n                            {/*{*/}\n                            {/*    formType === 'register' &&*/}\n                            {/*    <SignUp switchForm={switchForm} setLoading={setLoading} />*/}\n                            {/*}*/}\n                            {\n                                error &&\n                                <Fade in={true}>\n                                    <div>\n                                        <br />\n                                        <p>ERROR: {getError(error)}</p>\n                                    </div>\n                                </Fade>\n                            }\n                        </Card.Body>\n                        </LoadingOverlay>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import {Jumbotron} from 'react-bootstrap';\nimport './stylesheets/Home.css';\n\nexport default function Home() {\n    return (\n        <div>\n            <Jumbotron className={\"hero-section\"}>\n                <h1>Welcome to ZotRides</h1>\n                <p className={\"subtitle\"}>Book unforgettable cars from locations around the world</p>\n            </Jumbotron>\n        </div>\n    );\n}\n","import {Container, Jumbotron} from \"react-bootstrap\";\nimport React from \"react\";\n\nimport '../stylesheets/Template.css';\n\nexport default function(props) {\n    return (\n        <Jumbotron className={\"header\"}>\n            <Container>\n                <h1>{props.title}</h1>\n            </Container>\n        </Jumbotron>\n    )\n}","import DatePicker from \"react-date-picker\";\nimport {Form, Button} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport jQuery from \"jquery\";\nimport {Formik} from \"formik\";\nimport HOST from \"../../Host\";\nimport {Redirect} from \"react-router\";\n\nexport default function(props) {\n    const [submitted, setSubmitted] = useState(false);\n    if(submitted)\n        return <Redirect to={\"/mycart\"} />\n    return (\n        <Formik\n            initialValues={{\n                name: props.name,\n                carID: props.carID,\n                unitPrice: props.unitPrice\n            }}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: {\n                        ...values,\n                        endDate: dateToString(values.endDate),\n                        startDate: dateToString(values.startDate)\n                    },\n                    url: HOST + \"api/shopping-cart\",\n                    success: (resultData) => {\n                        console.log(JSON.stringify(resultData));\n                        setSubmitted(true);\n                        // if(resultData.status === \"fail\")\n                        //     props.setError(\"Login failed (Invalid username/password\");\n                        // else\n                        //     props.setSuccess(true);\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  errors,\n                  setFieldValue,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Start Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"startDate\"}\n                            value={values.startDate}\n                            onChange={(val) => setFieldValue('startDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>End Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"endDate\"}\n                            value={values.endDate}\n                            onChange={(val) => setFieldValue('endDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Pickup Location</Form.Label>\n                        <select\n                            name=\"pickupLocation\"\n                            value={values.pickLocation}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            style={{ display: 'block' }}\n                        >\n                            <option value=\"\" label=\"Select a location\" />\n                            {\n                                props.locations.map((location, index) => (\n                                    <option value={location} key={index}>\n                                        {location}\n                                    </option>\n                                ))\n                            }\n                        </select>\n\n                    </Form.Group>\n\n                    <Button variant={\"primary\"} type={\"submit\"}>Add to cart</Button>\n                </Form>\n            )}\n        </Formik>\n        // <div>\n        //     <Form\n        //     <h2>$317/day</h2>\n        //     <hr />\n        //     <h4>Trip start</h4>\n        //     <DatePicker onChange={onStartChange} value={startDate}/>\n        //     <h4>Trip end</h4>\n        //     <DatePicker onChange={onEndChange} value={endDate}/>\n        //     <h4>Pickup location</h4>\n        //     <Dropdown>\n        //         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        //             Pickup Location\n        //         </Dropdown.Toggle>\n        //\n        //         <Dropdown.Menu>\n        //             <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n        //             <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n        //             <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n        //         </Dropdown.Menu>\n        //     </Dropdown>\n        //     <Button>Continue</Button>\n        //     <hr />\n        // </div>\n    )\n}\n\nfunction dateToString(input) {\n    return formatDate(input)\n}\n\nfunction formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('/');\n}","import {useEffect, useState} from 'react';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport './stylesheets/Template.css';\nimport jQuery from 'jquery';\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport React from \"react\";\nimport Header from \"./Template/Header\";\nimport ReservationForm from \"./SingleCar/ReservationForm\";\nimport HOST from \"../Host\";\nimport {Redirect} from \"react-router\";\n\n\nexport default function SingleCar(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [car, setCar] = useState(EMPTY_CAR);\n    const [redirect, setRedirect] = useState(false);\n\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/single-car?id=\" + props.match.params.carId,\n            success: (resultData) => {\n                setCar(resultData[0]);\n                setLoading(false);\n            }\n        });\n    }, [])\n\n    function handleClick() {\n        setRedirect(true);\n    }\n\n    if(isLoading) {\n        return (<div>Loading...</div>)\n    }\n    console.log(redirect);\n    if(redirect) return <Redirect to={\"/browse/na/na/na/na/na/t\"} />\n    console.log();\n    return (\n        <div>\n            <Header title={\"Single Car Page\"}/>\n            <Container fluid className={\"pl-5\"}>\n                <Row>\n                    <Col xs={7}>\n                        <Row>\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>The car</p>\n                            </Col>\n                            <Col>\n                                <h1>{car.car_name}</h1>\n                                <LinkContainer to={\"/browse/na/na/na/na/\" + car.car_category}>\n                                    <p><i>{car.car_category}</i></p>\n                                </LinkContainer>\n                                <p>{car.car_rating} &#9733; ({car.car_votes} votes)</p>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>Hosted at</p>\n                            </Col>\n                            <Col>\n                                {\n                                    car.location_address.split(';').map((location, index) => (\n                                        <Col>\n                                        <LinkContainer to={\"/locations/\" + car.location_ids.split(';')[index]}>\n                                            <Button variant=\"link\" key={index}>{location}</Button>\n                                        </LinkContainer>\n                                        </Col>\n\n                                ))}\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col>\n                        <ReservationForm name={car.car_name} carID={car.car_id} unitPrice={120} locationids={car.location_ids.split(';')} locations={car.location_address.split(';')}/>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Button variant=\"link\" onClick={handleClick}>\n                        >> Back to Car List\n                    </Button>\n\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst EMPTY_CAR = {\n    car_category: \"NULL\",\n    car_id: \"NULL\",\n    car_name: \"NULL\",\n    car_rating: -1,\n    car_votes: -1,\n    location_address: [\"NULL\",\"NULL\",\"NULL\"],\n    location_phone: [\"NULL\",\"NULL\",\"NULL\"]\n}","import {useEffect, useState} from 'react';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport './stylesheets/Template.css';\nimport jQuery from 'jquery';\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport React from \"react\";\nimport Header from \"./Template/Header\";\nimport HOST from \"../Host\";\n\nexport default function SingleLocation(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [location, setLocation] = useState(EMPTY_LOCATION);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",  // Setting return data type\n            method: \"GET\",// Setting request method\n            url: HOST + \"api/single-loc?id=\" + props.match.params.locationId,\n            success: (resultData) => {\n                setLocation(resultData[0]);\n                setLoading(false);\n                console.log(resultData)\n            }\n        });\n    }, [])\n    if(isLoading) {\n        return (<div>Loading...</div>)\n    }\n    console.log(location)\n    return (\n        <div>\n            <Header title={\"Single Location Page\"} />\n            <Container fluid>\n                <Row>\n                    <Col xs={7}>\n                        <Row>\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>The location</p>\n                            </Col>\n                            <Col>\n                                <h1>{location.location_address}</h1>\n                                <p>{location.location_phone}</p>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>Cars here</p>\n                            </Col>\n                            <Col>\n                                {\n                                    location.cars_offered.split(';').map((car, index) => (\n                                        <Col>\n                                            <LinkContainer to={\"/cars/\" + location.cars_ids.split(\";\")[index]}>\n                                                <Button variant=\"link\" key={index}>{car}</Button>\n                                            </LinkContainer>\n                                        </Col>\n                                    ))\n                                }\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row>\n                    <LinkContainer to={'/browse/na/na/na/na/na/t'}>\n                        <Button variant=\"link\">\n                            >> Back to Car List\n                        </Button>\n                    </LinkContainer>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst EMPTY_LOCATION = {\n    cars_ids: \"NULL\",\n    cars_offered: \"NULL\",\n    location_address: \"NULL\",\n    location_id: \"NULL\",\n    location_phone: \"NULL\"\n}","import {Button, Form} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport {Redirect} from \"react-router\";\nimport {useState} from \"react\";\n\nexport default function(props) {\n    const [complete, setComplete] = useState(false);\n    const [query, setQuery] = useState({defaultQuery});\n    if (complete) {\n        props.setModalShow(false);\n        return (<Redirect to={\"/browse\" + \"/\" + query.model + \"/\" + query.year + \"/\" + query.make + \"/\" + query.location}/>);\n    }\n    return (\n        <Formik\n            // TODO: When all are empty return movie list\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                // props.setLoading(true);\n                if (values.model == null)\n                    values.model = 'na';\n                if (values.year == null)\n                    values.year = 'na';\n                if (values.make == null)\n                    values.make = 'na';\n                if (values.location == null)\n                    values.location = 'na';\n                setQuery(values);\n                setComplete(true);\n                window.location.reload(false);\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Car Model</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"model\"}\n                            id={\"model\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.model}\n                            placeholder={\"Enter model name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Year</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"year\"}\n                            id={\"year\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.year}\n                            placeholder={\"Enter year\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Make</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"make\"}\n                            id={\"make\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.make}\n                            placeholder={\"Enter make\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Location</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"location\"}\n                            id={\"location\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.location}\n                            placeholder={\"Enter location\"}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Search</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nconst defaultQuery = {\n    model: \"na\",\n    year: \"na\",\n    make: \"na\",\n    location: \"na\"\n}","import {Modal} from \"react-bootstrap\";\nimport SearchForm from \"./SearchModal/SearchForm\";\n\nexport default function (props) {\n\n    return(\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Search for Car\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <SearchForm setModalShow={props.setModalShow}/>\n            </Modal.Body>\n        </Modal>\n    )\n}","import {Modal, Button} from \"react-bootstrap\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../Host\";\nimport {Redirect} from \"react-router\";\n\nexport default function (props) {\n    const [categories, setCategories] = useState();\n    const [isLoading, setLoading] = useState(true);\n    const [redirectURL, setRedirectURL] = useState(\"\");\n    const [redirect, setRedirect] = useState(false);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/categories\",\n            success: (resultData) => {\n                console.log(resultData);\n                setCategories(resultData.map((element) => {\n                    return element.category\n                }));\n                setLoading(false);\n            }\n        });\n    }, []);\n\n    function handleClick(event) {\n        props.setModalShow(false);\n        setRedirectURL(\"/browse/na/na/na/na/\" + event.target.id);\n        setRedirect(true);\n    }\n    if(redirect)\n        return (<Redirect to={redirectURL}/>);\n\n    if(isLoading)\n        return <div></div>\n    return(\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Search for Car\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {\n                    categories.map((category) => (\n                        <Button id={category} onClick={handleClick} variant={\"link\"}>{category}</Button>\n                    ))\n                }\n            </Modal.Body>\n        </Modal>\n    )\n}","import {useState} from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport SearchModal from \"./Search/SearchModal\";\nimport VehicleTypeModal from \"./NavBarModals/VehicleTypeModal\";\n\nexport default function MyNav(props) {\n    const [modalShow, setModalShow] = useState(false);\n    const [browseTypeModalShow, setBrowseTypeModalShow] = useState(false);\n    const [browseLetterModalShow, setBrowseLetterModalShow] = useState(false);\n\n    const handleClick = () => setModalShow(!modalShow);\n    const handleBrowseType = () => {\n        setBrowseTypeModalShow(!browseTypeModalShow);\n    }\n    console.log(browseTypeModalShow)\n    return (\n        <div>\n            <VehicleTypeModal show={browseTypeModalShow}\n                              onHide={() => setBrowseTypeModalShow(false)}\n                              setModalShow={setBrowseTypeModalShow}\n            />\n            <SearchModal show={modalShow}\n                         onHide={() => setModalShow(false)}\n                         setModalShow={setModalShow}\n            />\n            <Navbar variant=\"light\" className={\"myNav\"}>\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand>\n                        <img\n                            src={\"https://i.ibb.co/hKLvRdN/Screen-Shot-2021-04-16-at-4-24-19-PM.png\"}\n                            style={{width: \"145px\"}}\n                        />\n                    </Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className={\"mr-auto\"}>\n                        <LinkContainer to={\"/browseby\"}>\n                            <Nav.Link>Make Query</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                    <Nav className={\"ml-auto\"}>\n                        {/*// TODO: Connecting search with variable flag*/}\n                        <LinkContainer to=\"/mycart\">\n                            <Nav.Link>My Cart</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}","import {useEffect, useState} from 'react';\nimport {Card, ListGroup, Col, Button} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport jQuery from \"jquery\";\nimport HOST from \"../../Host\";\nimport \"../stylesheets/CarCard.css\";\n\nexport default function CarCard(props) {\n    const [imageurl, setImageurl] = useState('https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-GWIN1aUTRO8HI2WwVEzIA.1440x700.jpg')\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            data: {make: jankyCarMake(props.name), category: props.category},\n            url: HOST + \"/api/get-image\",\n            success: (resultData) => {\n                setImageurl(resultData.imageurl);\n            }\n        });\n    }, [])\n\n    function handleRedirect() {\n        console.log(\"yes\")\n        props.handleCategorySelect(props.category);\n    }\n\n    return (\n        <Col xs={4} className={\"pt-3\"}>\n            <Card className={'text-center card'}>\n                <LinkContainer to={'/cars/' + props.id}>\n                    <Card.Img\n                        className={'mx-auto'}\n                        variant={'top'}\n                        src={imageurl}\n                    />\n                </LinkContainer>\n                <Card.Body className={'pt-1'}>\n                    <LinkContainer to={'/cars/' + props.id}>\n                        <Card.Title style={{fontSize: '30px'}} className={'mb-1'}>\n                            {props.name}\n                        </Card.Title>\n                    </LinkContainer>\n                    <p onClick={handleRedirect}>{props.category}</p>\n                    <p>{props.rating} &#9733; ({props.votes} votes)</p>\n                    <ListGroup variant=\"flush\">\n                        {props.locations.map((location, index) => (\n                            <LinkContainer to={'/locations/' + props.locationId[index]}>\n                                <ListGroup.Item key={index}>\n                                    {location} <br/>\n                                    {props.phone[index]}\n                                </ListGroup.Item>\n                            </LinkContainer>\n                        ))}\n                    </ListGroup>\n                    <LinkContainer to={'/cars/' + props.id}>\n                        <Button>Reserve</Button>\n                    </LinkContainer>\n\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nfunction jankyCarMake(name) {\n    var temp = name.split(\" \")[0];\n    if(temp == \"Alfa\")\n        return \"Alfa Romeo\";\n    else if(temp == \"Aston\")\n        return \"Aston Martin\";\n    else\n        return temp;\n}","import Header from \"./Template/Header\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport CarCard from \"./Home/CarCard\";\nimport HOST from \"../Host\";\n\nexport default function(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [cars, setCars] = useState([]);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: removeEmpty(props.match.params),\n            url: HOST + \"api/search-car\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else\n                    setCars(resultData);\n                setLoading(false);\n            }\n            // setComplete(true);\n        });\n    }, [])\n\n    if (isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n            <Header title={\"Search Results\"}/>\n            <Container fluid>\n                <Row>\n                    <Col>\n                        <p>Model: {props.match.params.model}</p>\n                        <p>Year: {props.match.params.year}</p>\n                        <p>Make: {props.match.params.make}</p>\n                        <p>Location: {props.match.params.location}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    {cars.map((car, index) => (\n                        <CarCard\n                            key={index}\n                            id={car.car_id}\n                            name={car.car_name}\n                            category={car.car_category}\n                            rating={car.car_rating}\n                            votes={car.car_votes}\n                            locations={car.location_address.split(';')}\n                            locationId={car.location_ids.split(';')}\n                            phone={car.location_phone.split(';')}\n                        />\n                    ))}\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nfunction removeEmpty(object) {\n    if(object.model === \"na\" || object.model == null)\n        delete object.model;\n    if(object.year === \"na\" || object.year == null)\n        delete object.year;\n    if(object.make === \"na\" || object.make == null)\n        delete object.make;\n    if(object.location === \"na\" || object.location == null)\n        delete object.location;\n    return object;\n}","import DatePicker from \"react-date-picker\";\nimport {Form, Button} from \"react-bootstrap\";\nimport React from \"react\";\nimport jQuery from \"jquery\";\nimport {Formik} from \"formik\";\nimport HOST from \"../../Host\";\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: {\n                        endDate: dateToString(values.endDate),\n                        startDate: dateToString(values.startDate),\n                        itemID: props.id\n                    },\n                    url: HOST + \"api/modify-cart-item\",\n                    success: (resultData) => {\n                        console.log(resultData)\n                        window.location.reload(false);\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  values,\n                  errors,\n                  setFieldValue,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Start Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"startDate\"}\n                            value={values.startDate}\n                            onChange={(val) => setFieldValue('startDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>End Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"endDate\"}\n                            value={values.endDate}\n                            onChange={(val) => setFieldValue('endDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Update Reservation</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\n\nfunction dateToString(input) {\n    return formatDate(input)\n}\n\nfunction formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('/');\n}","import {Col, Modal, Row} from \"react-bootstrap\";\nimport UpdateCartForm from \"../UpdateCartForm\";\n\nexport default function(props) {\n    return (\n        <Modal\n            show={props.showUpdate}\n            onHide={() => props.setUpdate(false)}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Update Reservation\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col xs={6}\n                         style={{\n                             backgroundImage: \"url('https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-GWIN1aUTRO8HI2WwVEzIA.1440x700.jpg')\",\n                             backgroundSize: \"cover\",\n                             backgroundPosition: \"center\"\n                         }}>\n                    </Col>\n                    <Col>\n                        <UpdateCartForm\n                            id={props.carID}\n                        />\n                    </Col>\n                </Row>\n            </Modal.Body>\n        </Modal>\n    )\n}","import {Button, Card} from \"react-bootstrap\";\nimport {useState} from \"react\";\nimport UpdateModal from \"./CartItem/UpdateModal\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../Host\";\n\nexport default function(props) {\n\n    const [showUpdate, setUpdate] = useState(false);\n\n    function handleUpdate() {\n        setUpdate(!showUpdate);\n    }\n\n    function removeItem() {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {\n                itemID: props.id\n            },\n            url: HOST + \"api/delete-cart-item\",\n            success: (resultData) => {\n                console.log(resultData);\n                window.location.reload(false);\n            }\n        });\n    }\n\n    return (\n        <div>\n            <UpdateModal showUpdate={showUpdate} setUpdate={setUpdate} carID={props.id} />\n            <Card className={'text-center'}>\n                <Card.Img\n                    className={'mx-auto'}\n                    variant={'top'}\n                    src={'https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-GWIN1aUTRO8HI2WwVEzIA.1440x700.jpg'}\n                />\n                <Card.Body className={'pt-1'}>\n                    <Card.Title style={{fontSize: '30px'}} className={'mb-1'}>\n                        {props.name}\n                    </Card.Title>\n                    <p>Price per Day: ${props.price}</p>\n                    <p>Total Price: ${props.price*daysInBetween(props.start, props.end)}</p>\n                    <p>Days: {daysInBetween(props.start, props.end)}</p>\n                    <p>Pickup Location: {props.location}</p>\n                    <p>Start Date: {props.start}</p>\n                    <p>End Date: {props.end}</p>\n                    <Button onClick={handleUpdate}>Update</Button>\n                    <Button className={\"ml-4\"} onClick={removeItem}>Remove</Button>\n                </Card.Body>\n\n            </Card>\n        </div>\n    )\n}\n\nfunction daysInBetween(start, end) {\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const fDate = start.split(\"/\");\n    const sDate = end.split(\"/\");\n    const firstDate = new Date(fDate[0], fDate[1], fDate[2]);\n    const secondDate = new Date(sDate[0], sDate[1], sDate[2]);\n    return Math.round(Math.abs((firstDate - secondDate) / oneDay));\n}","import Header from \"./Template/Header\";\nimport CartItem from \"./MyCart/CartItem\";\nimport {Container, Button, Row, Col, Image} from \"react-bootstrap\";\nimport {LinkContainer} from 'react-router-bootstrap';\nimport React, {useState, useEffect} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../Host\";\n\nexport default function() {\n    const [isLoading, setLoading] = useState(true);\n    const [cars, setCars] = useState([]);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/shopping-cart\",\n            success: (resultData) => {\n                setCars(resultData.previousItems);\n                setLoading(false);\n                console.log(resultData);\n            }\n        });\n    }, [])\n\n    if (isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n        <Header title={\"My Cart\"}/>\n        <Container>\n            <Row>\n                <Col xs={8}>\n                    {cars.map((car, index) => (\n                        <CartItem\n                            key={index}\n                            id={car.id}\n                            name={car.name}\n                            location={car.pickupLocation}\n                            start={car.startDate}\n                            end={car.endDate}\n                            price={car.unitPrice}\n                        />\n                    ))}\n                </Col>\n                <Col>\n                    <LinkContainer to={\"/payment\"}>\n                        <Button>Continue to Payment</Button>\n                    </LinkContainer>\n\n                </Col>\n            </Row>\n            <Row>\n                <LinkContainer to={'/browse/na/na/na/na/na/t'}>\n                    <Button variant=\"link\">\n                        >> Back to Car List\n                    </Button>\n                </LinkContainer>\n            </Row>\n        </Container>\n        </div>\n\n    )\n}","import jQuery from \"jquery\";\nimport HOST from \"../../Host\";\nimport {Button, Form, Row, Col} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport React from \"react\";\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: {\n                        firstName: values.firstname,\n                        lastName: values.lastname,\n                        ccNumber: values.cc,\n                        expDate: values.year + \"/\" + values.month + \"/\" + values.day\n                    },\n                    url: HOST + \"api/payment\",\n                    success: (resultData) => {\n                        console.log(resultData);\n                        if(resultData.status === \"fail\") {\n                            props.setFailed(true);\n                        } else {\n                            props.setCompleted(true);\n                            props.setSalesId(resultData.message);\n                        }\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>First name</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"firstname\"}\n                            id={\"firstname\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.firstname}\n                            placeholder={\"Enter First Name\"}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"lastname\"}\n                            id={\"lastname\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.lastname}\n                            placeholder={\"Enter Last Name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Credit Card Number</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"cc\"}\n                            id={\"cc\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.cc}\n                            placeholder={\"Enter Credit Card Number\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Expiration Date</Form.Label>\n                        <Row>\n                            <Col>\n                            <Form.Control\n                                type={\"string\"}\n                                name={\"year\"}\n                                id={\"year\"}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.year}\n                                placeholder={\"Enter year\"}\n                            />\n                            </Col>\n                            <Col>\n                            <Form.Control\n                                type={\"string\"}\n                                name={\"month\"}\n                                id={\"month\"}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.month}\n                                placeholder={\"Enter month\"}\n                            />\n                            </Col>\n                            <Col>\n                            <Form.Control\n                                type={\"string\"}\n                                name={\"day\"}\n                                id={\"day\"}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.day}\n                                placeholder={\"Enter day\"}\n                            />\n                            </Col>\n                        </Row>\n\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Continue</Button>\n                    {/*<Button variant={\"link\"} value={\"register\"} onClick={props.switchForm}>Create an Account</Button>*/}\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nfunction generateNumArray(total) {\n    var result = [];\n    var y = 0;\n    for(var i=1; i<total; i++) {\n        result[y++] = i;\n    }\n    return result;\n}\n\nfunction generateNumArrayWithStart(start, total) {\n    var result = [];\n    var y = 0;\n    for(var i=start; i<total; i++) {\n        result[y++] = i;\n    }\n    return result;\n}","import {Card} from \"react-bootstrap\";\n\nexport default function(props) {\n    return (\n        <Card className={'text-center'}>\n            <Card.Img\n                className={'mx-auto'}\n                variant={'top'}\n                src={'https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-GWIN1aUTRO8HI2WwVEzIA.1440x700.jpg'}\n            />\n            <Card.Body className={'pt-1'}>\n                <Card.Title style={{fontSize: '30px'}} className={'mb-1'}>\n                    {props.name}\n                </Card.Title>\n                <p>Days: {daysInBetween(props.start, props.end)}</p>\n                <p>Pickup Location: {props.location}</p>\n                <p>Start Date: {props.start}</p>\n                <p>End Date: {props.end}</p>\n            </Card.Body>\n\n        </Card>\n    )\n}\n\nfunction daysInBetween(start, end) {\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const fDate = start.split(\"/\");\n    const sDate = end.split(\"/\");\n    const firstDate = new Date(fDate[0], fDate[1], fDate[2]);\n    const secondDate = new Date(sDate[0], sDate[1], sDate[2]);\n    return Math.round(Math.abs((firstDate - secondDate) / oneDay));\n}","import {Container, Row, Col, Modal, Button} from \"react-bootstrap\";\nimport Header from \"./Template/Header\";\nimport PaymentForm from \"./Payments/PaymentForm\";\nimport React, {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../Host\";\n\nimport ConfirmationCard from \"./MyCart/ConfirmationCard\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nexport default function() {\n    const [isLoading, setLoading] = useState(true);\n    const [cars, setCars] = useState([]);\n    const [completed, setCompleted] = useState(false);\n    const [isFailed, setFailed] = useState(false);\n    const [salesId, setSalesId] = useState(-1);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/shopping-cart\",\n            success: (resultData) => {\n                setCars(resultData.previousItems);\n                setLoading(false);\n                console.log(resultData);\n            }\n        });\n    }, [])\n\n    const handleClose = () => setFailed(false);\n\n    console.log(cars);\n    if (isLoading) {\n        return (<div>Loading...</div>)\n    }\n    if (isFailed) {\n        return (\n            <Modal show={isFailed} onHide={handleClose} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>ALERT</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Transaction failed, please check your payment info</Modal.Body>\n            </Modal>\n        )\n    }\n    console.log(completed);\n    if (completed) {\n        return (\n            <div>\n                <Header title={\"Confirmation\"}/>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h1>Thank you for your order!</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <h3>Sales ID: {salesId}</h3>\n                            <h3>Total Price: ${calculateTotal(cars)}</h3>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <h2>Your reservations</h2>\n                    </Row>\n                    <Row>\n                        {cars.map((car, index) => (\n                            <Col xs={4}>\n                                <ConfirmationCard\n                                    key={index}\n                                    id={car.id}\n                                    name={car.name}\n                                    location={car.pickupLocation}\n                                    start={car.startDate}\n                                    end={car.endDate}\n                                    price={car.unitPrice}\n                                />\n                            </Col>\n                        ))}\n                    </Row>\n                    <Row>\n                        <LinkContainer to={'/browse/na/na/na/na/na/t'}>\n                            <Button variant=\"link\">\n                                >> Back to Car List\n                            </Button>\n                        </LinkContainer>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <Header title={\"Payment\"}/>\n            <Container>\n                <Row>\n                    <Col>\n                        <h1>Cart Price: ${calculateTotal(cars)}</h1>\n                    </Col>\n                    <Col>\n                        <PaymentForm setSalesId={setSalesId} setFailed={setFailed} setCompleted={setCompleted}/>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n\n    )\n}\n\nfunction calculateTotal(cars) {\n    var sum = 0;\n    for(var i=0; i<cars.length; i++) {\n        const element = cars[i];\n        sum += parseInt(daysInBetween(element.startDate, element.endDate) * element.unitPrice);\n    }\n    return sum;\n}\n\nfunction daysInBetween(start, end) {\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const fDate = start.split(\"/\");\n    const sDate = end.split(\"/\");\n    const firstDate = new Date(fDate[0], fDate[1], fDate[2]);\n    const secondDate = new Date(sDate[0], sDate[1], sDate[2]);\n    return Math.round(Math.abs((firstDate - secondDate) / oneDay));\n}","import {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../Host\";\nimport CarCard from \"./Home/CarCard\";\nimport {Container, Row, Col, Button} from \"react-bootstrap\";\n\nexport default function(props) {\n    const [cars, setCars] = useState({});\n    const [isLoading, setLoading] = useState(true);\n    const [message, setMessage] = useState(\"\");\n    const [whoFirst, setFirst] = useState(0);\n    const [ratingDescend, setRatingDescend] = useState(0);\n    const [nameDescend, setNameDescend] = useState(0);\n    const [redirect, setRedirect] = useState(\"\");\n\n\n    useEffect(() => {\n        const query = removeEmpty(props.match.params);\n        if(query.retrace != null) {\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"GET\",\n                url: HOST + \"api/jump\",\n                success: (resultData) => {\n                    console.log(resultData);\n                    setFirst(resultData.sorting.ratingFirst);\n                    setRatingDescend(resultData.sorting.ratingDescend);\n                    setNameDescend(resultData.sorting.nameDescend);\n                    setCars(resultData.results);\n                    setMessage(resultData.message);\n                    setLoading(false);\n                }\n            });\n        } else if(query.key != null && query.key.length === 1) {\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"POST\",\n                data: {model: query.key},\n                url: HOST + \"api/browse-car\",\n                success: (resultData) => {\n                    setCars(resultData.results);\n                    setMessage(resultData.message);\n                    setLoading(false);\n                }\n            });\n        } else if(query.key != null) {\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"POST\",\n                data: {category: query.key},\n                url: HOST + \"api/browse-car\",\n                success: (resultData) => {\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);                }\n            });\n        } else {\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"POST\",\n                data: removeEmpty(props.match.params),\n                url: HOST + \"api/search-car\",\n                success: (resultData) => {\n                    if (resultData.status === \"fail\")\n                        props.setError(\"Login failed (Invalid username/password\");\n                    else {\n                        setMessage(resultData.message);\n                        setCars(resultData.results);\n                        setLoading(false);\n                    }\n                }\n            });\n        }\n    }, [])\n\n    function handleNext() {\n        setLoading(true);\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {pageStatus: 1},\n            url: HOST + \"api/paginate\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else {\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);\n                }\n            }\n        });\n    }\n\n    function handlePrevious() {\n        setLoading(true);\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {pageStatus: -1},\n            url: HOST + \"api/paginate\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else {\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);\n                }\n            }\n        });\n    }\n\n    function setShown(event) {\n        console.log(event.target.value);\n        setLoading(true);\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {resultsPerPage: event.target.value},\n            url: HOST + \"api/paginate\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else {\n                    console.log(resultData);\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);\n                }\n            }\n        });\n    }\n\n    function handleRatingSort(event) {\n        setRatingDescend(event.target.value);\n        sendSortQuery({\n            ratingFirst: whoFirst,\n            ratingDescend: event.target.value,\n            nameDescend: nameDescend\n        });\n    }\n\n    function handleNameSort(event) {\n        setNameDescend(event.target.value);\n        sendSortQuery({\n            ratingFirst: whoFirst,\n            ratingDescend: ratingDescend,\n            nameDescend: event.target.value\n        });\n    }\n\n    function handleSortPref(event) {\n        setFirst(event.target.value);\n        console.log(\"ratingFirst: \" + event.target.value);\n        sendSortQuery({\n            ratingFirst: event.target.value,\n            ratingDescend: ratingDescend,\n            nameDescend: nameDescend\n        });\n    }\n\n    function sendSortQuery(data) {\n        setLoading(true);\n        console.log(\"Sending:\");\n        console.log(data)\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: data,\n            url: HOST + \"api/sort\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else {\n                    console.log(resultData);\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);\n                }\n            }\n        });\n    }\n\n    function handleCategorySelect(key) {\n        setLoading(true);\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {category: key},\n            url: HOST + \"api/browse-car\",\n            success: (resultData) => {\n                setMessage(resultData.message);\n                setCars(resultData.results);\n                setLoading(false);                }\n        });\n    }\n\n    if(isLoading)\n        return(<div>LOADING</div>)\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Button onClick={handlePrevious}>Previous</Button>\n                    <Button className={\"ml-3\"} onClick={handleNext}>Next</Button>\n                </Col>\n                <Col>\n                    <p>{message}</p>\n                </Col>\n                <Col>\n                    <select name=\"show\" id=\"cars\" onChange={setShown}>\n                        <option>Set show</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                    </select>\n                </Col>\n                <Col>\n                    <select name=\"sort\" id=\"sort\" value={whoFirst} onChange={handleSortPref}>\n                        <option value=\"1\">By Rating First</option>\n                        <option value=\"0\">By Title First</option>\n                    </select>\n                    <select name=\"sort\" id=\"sort\" value={nameDescend} onChange={handleNameSort}>\n                        <option value=\"0\">By Title Ascending</option>\n                        <option value=\"1\">By Title Descending</option>\n                    </select>\n                    <select name=\"sort\" id=\"sort\" value={ratingDescend} onChange={handleRatingSort}>\n                        <option value=\"0\">By Rating Ascending</option>\n                        <option value=\"1\">By Rating Descending</option>\n                    </select>\n                </Col>\n            </Row>\n            <Row>\n                {cars.map((car, index) => (\n                    <CarCard\n                        key={index}\n                        id={car.car_id}\n                        name={car.car_name}\n                        category={car.car_category}\n                        rating={car.car_rating}\n                        votes={car.car_votes}\n                        locations={car.location_address.split(';')}\n                        locationId={car.location_ids.split(';')}\n                        phone={car.location_phone.split(';')}\n                        handleCategorySelect={handleCategorySelect}\n                    />\n                ))}\n            </Row>\n        </Container>\n    )\n}\n\nfunction removeEmpty(object) {\n    if(object.model === \"na\" || object.model == null)\n        delete object.model;\n    if(object.year === \"na\" || object.year == null)\n        delete object.year;\n    if(object.make === \"na\" || object.make == null)\n        delete object.make;\n    if(object.location === \"na\" || object.location == null)\n        delete object.location;\n    if(object.key === \"na\" || object.key == null)\n        delete object.key;\n    return object;\n}","import {Button, Form} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport {Redirect} from \"react-router\";\nimport {useState} from \"react\";\n\nexport default function() {\n    const [complete, setComplete] = useState(false);\n    const [query, setQuery] = useState({defaultQuery});\n    if (complete) {\n        return (<Redirect to={\"/browse\" + \"/\" + query.model + \"/\" + query.year + \"/\" + query.make + \"/\" + query.location}/>);\n    }\n    return (\n        <Formik\n            // TODO: When all are empty return movie list\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                // props.setLoading(true);\n                if (values.model == null)\n                    values.model = 'na';\n                if (values.year == null)\n                    values.year = 'na';\n                if (values.make == null)\n                    values.make = 'na';\n                if (values.location == null)\n                    values.location = 'na';\n                setQuery(values);\n                setComplete(true);\n                window.location.reload(false);\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Car Model</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"model\"}\n                            id={\"model\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.model}\n                            placeholder={\"Enter model name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Year</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"year\"}\n                            id={\"year\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.year}\n                            placeholder={\"Enter year\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Make</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"make\"}\n                            id={\"make\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.make}\n                            placeholder={\"Enter make\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Location</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"location\"}\n                            id={\"location\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.location}\n                            placeholder={\"Enter location\"}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Search</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nconst defaultQuery = {\n    model: \"na\",\n    year: \"na\",\n    make: \"na\",\n    location: \"na\"\n}","import {Col, Row, Container, Button} from \"react-bootstrap\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../Host\";\nimport {Redirect} from \"react-router\";\nimport SearchForm from \"./BrowseBy/SearchForm\";\n\nexport default function() {\n    const [categories, setCategories] = useState();\n    const [loading, setLoading] = useState(true);\n    const [redirect, setRedirect] = useState(false);\n    const [redirectURL, setRedirectURL] = useState(\"\");\n\n    useEffect(() => {\n        console.log(\"Asdfasdf\")\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/categories\",\n            success: (resultData) => {\n                console.log(resultData);\n                setCategories(resultData.map((element) => {\n                    return element.category\n                }));\n                setLoading(false);\n            }\n        });\n    }, []);\n\n    function handleClick(event) {\n        setRedirectURL(\"/browse/na/na/na/na/\" + event.target.id);\n        setRedirect(true);\n    }\n\n    if(loading) return <div>LOADING</div>\n    if(redirect) return <Redirect to={redirectURL}/>\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h1> Search </h1>\n                    <SearchForm />\n                </Col>\n                <Col>\n                    <h1> Browse by Vehicle Type </h1>\n                    {\n                        categories.map((category) => (\n                            <Button id={category} onClick={handleClick} variant={\"link\"}>{category}</Button>\n                        ))\n                    }\n                </Col>\n                <Col>\n                    <h1> Browse by Vehicle Name </h1>\n                    {\n                        letters.map((category) => (\n                            <Button id={category} onClick={handleClick} variant={\"link\"}>{category}</Button>\n                        ))\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nconst letters = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\", \"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"*\"]","import {Table} from \"react-bootstrap\";\n\nexport default function(props) {\n    console.log(props);\n    if(props.dbtitle === undefined)\n        return <div></div>\n    return (\n        <div>\n            <h5>{props.dbtitle}</h5>\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>Attributes</th>\n                    <th>Type</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    props.fields.map((element, index)=> (\n                        <tr>\n                            <th>{element}</th>\n                            <th>{props.types[index]}</th>\n                        </tr>\n                    ))\n                }\n                </tbody>\n            </Table>\n        </div>\n    )\n}","import {Button, Form, Modal} from \"react-bootstrap\";\nimport {useState} from \"react\";\nimport {Formik} from \"formik\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../../Host\";\n\nexport default function(props) {\n    const [success, setSuccess] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const handleClose = () => setSuccess(false);\n\n    if(success) {\n        return (\n            <Modal show={success} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Response Received!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{message}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    return (\n        <Formik\n            // TODO: When all are empty return movie list\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: values,\n                    url: HOST + \"api/add-car\",\n                    success: (resultData) => {\n                        if(resultData.errorMessage != null) {\n                            props.setError([resultData.errorMessage, \"\"]);\n                        } else {\n                            setMessage(resultData.message);\n                            setSuccess(true);\n                        }\n                    },\n                    error: (resultData) => {\n                        console.log(\"ERROr\")\n                        console.log(resultData)\n                    }\n\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Car Model</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"model\"}\n                            id={\"model\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.model}\n                            placeholder={\"Enter model name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Year</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"year\"}\n                            id={\"year\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.year}\n                            placeholder={\"Enter year\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Make</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"make\"}\n                            id={\"make\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.make}\n                            placeholder={\"Enter make\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Category</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"category\"}\n                            id={\"category\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.category}\n                            placeholder={\"Enter category\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car address</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"address\"}\n                            id={\"address\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.address}\n                            placeholder={\"Enter address\"}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Add</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}","import {Button, Form, Modal} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../../Host\";\nimport {useState} from \"react\";\n\nexport default function(props) {\n    const [success, setSuccess] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const handleClose = () => setSuccess(false);\n\n    if(success) {\n        return (\n            <Modal show={success} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Response Received!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{message}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    return (\n        <Formik\n            // TODO: When all are empty return movie list\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: values,\n                    url: HOST + \"api/add-loc\",\n                    success: (resultData) => {\n                        if(resultData.errorMessage != null) {\n                            props.setError([\"\", resultData.errorMessage]);\n                        } else {\n                            setMessage(resultData.message);\n                            setSuccess(true);\n                        }\n                    },\n                    error: (resultData) => {\n                        console.log(\"ERROR\")\n                        console.log(resultData)\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Address*</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"address\"}\n                            id={\"address\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.address}\n                            placeholder={\"Enter address name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Phone number</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"phoneNumber\"}\n                            id={\"phoneNumber\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.phoneNumber}\n                            placeholder={\"Enter Phone Number\"}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Add</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}","import {Col, Row} from \"react-bootstrap\";\nimport DBTable from \"./Dashboard/Table\";\nimport AddCarForm from \"./Dashboard/AddCarForm\";\nimport AddPickupForm from \"./Dashboard/AddPickupForm\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../Host\";\n\nexport default function() {\n    const [tables, setTables] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState([\"\",\"\"]);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/metadata\",\n            success: (resultData) => {\n                setTables(Object.values(resultData));\n                setLoading(false);\n            }\n            // setComplete(true);\n        });\n    }, [])\n\n    if(isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n            <h1>Dashboard</h1>\n            <h3 id={\"tables\"}>Tables</h3>\n            <Row>\n                {\n                    tables.map((element) => (\n                        <Col xs={3} >\n                            <DBTable\n                                dbtitle={element['tableName']}\n                                fields={element['fields']}\n                                types={element['types']}\n                            />\n                        </Col>\n                    ))\n                }\n            </Row>\n            <hr />\n            <h3 id={\"addcar\"}>Add car</h3>\n            <Row>\n                <Col>\n                    <AddCarForm setError={setError} />\n                    <p>{error[0]}</p>\n                </Col>\n            </Row>\n            <hr />\n            <h3 id={\"addpickup\"}>Add Pickup Location</h3>\n            <Row>\n                <Col>\n                    <AddPickupForm setError={setError}/>\n                    <p>{error[1]}</p>\n                </Col>\n            </Row>\n            <div className={\"end\"}/>\n        </div>\n    )\n}","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\nimport jQuery from 'jquery';\nimport HOST from '../../../Host';\nimport ReCaptcha from 'react-google-recaptcha';\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{username:\"classta@email.edu\", password:\"classta\"}}\n            onSubmit={(async (values) => {\n                console.log(values);\n\n                props.setLoading(true);\n                // TODO: Connect to correct employee login\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: values,\n                    url: HOST + \"api/employee-login\",\n                    success: (resultData) => {\n                        props.setLoading(false);\n                        console.log(JSON.stringify(resultData));\n\n                        if(resultData.status === \"fail\")\n                            props.setError(resultData.message);\n                        else\n                            props.setSuccess(true);\n                    },\n                    error: (resultData) => {\n                        props.setLoading(false);\n                        props.setError(\"Invalid email/password\");\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"username\"}\n                            id={\"username\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.username}\n                            placeholder={\"Enter username\"}\n                            isInvalid={touched.username && errors.username}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type={\"password\"}\n                            name={\"password\"}\n                            id={\"password\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                            placeholder={\"Enter password\"}\n                            isInvalid={touched.password && errors.password}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <ReCaptcha\n                            sitekey={\"6LdFer8aAAAAACdsGnif7x0qN-yvVYsYPlyMCIAW\"}\n                            onChange={(value) => values.recaptcha = value}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Login</Button>\n                    <LinkContainer to={\"/login\"}>\n                        <Button variant={\"link\"} value={\"register\"}>Customer Login</Button>\n                    </LinkContainer>\n                </Form>\n            )}\n        </Formik>\n    )\n}","import {Button, Card, Col, Container, Nav, Row} from \"react-bootstrap\";\nimport \"./stylesheets/EmployeeLogin.css\";\nimport Dashboard from \"./EmployeeLogin/Dashboard\";\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport {useState} from \"react\";\nimport SignIn from \"./EmployeeLogin/Dashboard/SignIn\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nexport default function () {\n    const [success, setSuccess] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState();\n\n    if(!success) {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                    <h1 className={\"text-center pt-5\"}>Dashboard Login</h1>\n                    <Card xs={4}>\n                        <LoadingOverlay active={isLoading} spinner text={'Logging in...'}>\n                            <Card.Body>\n                                <SignIn setLoading={setLoading} setError={setError} setSuccess={setSuccess} />\n                            </Card.Body>\n                            <div>{error}</div>\n                        </LoadingOverlay>\n                    </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n    return (\n        <Container fluid>\n            <Row>\n                <Col xs={2} className={\"sidebar\"}>\n                    <Nav defaultActiveKey={\"tables\"} className={\"flex-column\"}>\n                        <AnchorLink href='#tables'><Nav.Link className={\"nav-link\"} eventKey={\"tables\"}>Tables</Nav.Link></AnchorLink>\n                        <AnchorLink href='#addcar'><Nav.Link className={\"nav-link\"} eventKey={\"addcar\"}>Add Car</Nav.Link></AnchorLink>\n                        <AnchorLink href='#addpickup'><Nav.Link className={\"nav-link\"} eventKey={\"addpickup\"}>Add Pickup Location</Nav.Link></AnchorLink>\n                        <LinkContainer to={\"/\"}>\n                            <Nav.Link className={\"nav-link\"}>Go to site</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                </Col>\n                <Col xs={10}>\n                    <Dashboard />\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport SingleCar from './components/SingleCar';\nimport SingleLocation from './components/SingleLocation';\nimport Navbar from './components/NavBar';\nimport SearchResults from \"./components/SearchResults\";\nimport MyCart from \"./components/MyCart\";\nimport Payments from \"./components/Payments\";\nimport BrowseResults from \"./components/BrowseResults\";\nimport BrowseBy from \"./components/BrowseBy\";\nimport EmployeeLogin from \"./components/EmployeeLogin\";\n\nfunction App() {\n    return (\n        <Router basename={\"/ZotRides\"}>\n            <Switch>\n                <Route exact path={\"/(login)\"} component={LoginContainer} />\n                <Route exact path={\"/(_dashboard)\"} component={EmployeeLoginContainer} />\n                <Route component={DefaultContainer} />\n            </Switch>\n        </Router>\n    );\n}\n\nconst LoginContainer = () => (\n    <div>\n        <Route path=\"/login\" render={() => <Login />} />\n    </div>\n)\n\nconst EmployeeLoginContainer = () => (\n    <div>\n        <Route path=\"/_dashboard\" render={() => <EmployeeLogin />} />\n    </div>\n)\n\nconst DefaultContainer = () => (\n    <div>\n        <Navbar />\n        {/*<Route path=\"/browse/:query\" render={(props) => <Browse {...props} />} />*/}\n        {/*<Route path=\"/browse/:query/:category\" render={(props) => <Browse {...props} />} />*/}\n        <Route path=\"/\" exact render={() => <Home />} />\n        <Route path=\"/search/:model?/:year?/:make?/:location?\" render={(props) => <SearchResults {...props}/>} />\n        <Route path=\"/browse/:model?/:year?/:make?/:location?/:key?/:retrace?\" render={(props) => <BrowseResults {...props}/>} />\n        <Route path=\"/mycart\" render={() => <MyCart />} />\n        <Route path=\"/payment\" render={() => <Payments />} />\n        <Route path=\"/cars/:carId\" render={(props) => <SingleCar {...props} />} />\n        <Route path=\"/locations/:locationId\" render={(props) => <SingleLocation {...props} />} />\n        <Route path=\"/browseby\" render={() => <BrowseBy />} />\n    </div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}