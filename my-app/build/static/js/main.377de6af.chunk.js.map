{"version":3,"sources":["Host.js","components/Login/SignIn.js","components/Login.js","components/Home.js","components/Template/Header.js","components/SingleCar/ReservationForm.js","components/SingleCar.js","components/SingleLocation.js","components/Search/SearchModal/SearchForm.js","components/Search/SearchModal.js","components/NavBarModals/VehicleTypeModal.js","components/NavBar.js","components/Home/CarCard.js","components/SearchResults.js","components/MyCart/UpdateCartForm.js","components/MyCart/CartItem/UpdateModal.js","components/MyCart/CartItem.js","components/MyCart.js","components/Payments/PaymentForm.js","components/MyCart/ConfirmationCard.js","components/Payments.js","components/BrowseResults.js","components/BrowseBy/SearchForm.js","components/BrowseBy.js","components/EmployeeLogin/Dashboard/Table.js","components/EmployeeLogin/Dashboard/AddCarForm.js","components/EmployeeLogin/Dashboard/AddPickupForm.js","components/EmployeeLogin/Dashboard.js","components/EmployeeLogin/Dashboard/SignIn.js","components/EmployeeLogin.js","App.js","reportWebVitals.js","index.js"],"names":["props","initialValues","username","password","onSubmit","values","a","console","log","jQuery","ajax","dataType","method","data","url","HOST","success","resultData","JSON","stringify","status","setError","message","setSuccess","error","handleSubmit","handleChange","handleBlur","touched","errors","Form","noValidate","Group","Label","Control","type","name","id","onChange","onBlur","value","placeholder","isInvalid","Feedback","sitekey","recaptcha","Button","variant","to","useState","setForm","isLoading","setLoading","Container","className","Row","Col","Card","active","spinner","text","Body","SignIn","switchForm","event","target","Fade","in","getError","Home","singleSelections","setSingleSelections","setText","options","setOptions","redirectId","setRedirectId","redirect","setRedirect","cache","setCache","activeIndex","setActiveIndex","useEffect","timeOutId","setTimeout","input","match","length","Object","keys","some","element","indexOf","toLowerCase","token","results","temp","runQuery","clearTimeout","Jumbotron","onInputChange","delay","labelKey","map","selected","onKeyDown","e","key","filterBy","state","xs","onClick","title","submitted","setSubmitted","carID","unitPrice","endDate","dateToString","startDate","setFieldValue","val","pickLocation","style","display","label","locations","location","index","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","formatDate","SingleCar","EMPTY_CAR","car","setCar","params","carId","Header","fluid","textAlign","car_name","car_category","car_rating","car_votes","location_address","split","location_ids","ReservationForm","car_id","locationids","location_phone","SingleLocation","EMPTY_LOCATION","setLocation","locationId","cars_offered","cars_ids","location_id","complete","setComplete","defaultQuery","query","setQuery","setModalShow","model","make","window","reload","Modal","size","aria-labelledby","centered","closeButton","Title","SearchForm","categories","setCategories","redirectURL","setRedirectURL","handleClick","category","MyNav","modalShow","browseTypeModalShow","setBrowseTypeModalShow","VehicleTypeModal","show","onHide","SearchModal","Navbar","Brand","src","width","Toggle","aria-controls","Collapse","Nav","Link","CarCard","imageurl","setImageurl","jankyCarMake","Img","fontSize","handleCategorySelect","rating","votes","ListGroup","Item","phone","cars","setCars","removeEmpty","object","itemID","showUpdate","setUpdate","backgroundImage","backgroundSize","backgroundPosition","UpdateCartForm","UpdateModal","price","daysInBetween","start","end","fDate","sDate","firstDate","secondDate","Math","round","abs","previousItems","CartItem","pickupLocation","firstName","firstname","lastName","lastname","ccNumber","cc","expDate","setFailed","setCompleted","setSalesId","completed","isFailed","salesId","animation","calculateTotal","ConfirmationCard","PaymentForm","sum","i","parseInt","setMessage","whoFirst","setFirst","ratingDescend","setRatingDescend","nameDescend","setNameDescend","sendSortQuery","retrace","sorting","ratingFirst","fulltext","replace","pageStatus","resultsPerPage","loading","letters","undefined","dbtitle","Table","striped","bordered","hover","fields","types","handleClose","Footer","errorMessage","address","phoneNumber","tables","setTables","AddCarForm","AddPickupForm","defaultActiveKey","href","eventKey","Dashboard","LoginContainer","path","render","Login","EmployeeLoginContainer","DefaultContainer","exact","SearchResults","BrowseResults","MyCart","Payments","BrowseBy","App","basename","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.377de6af.chunk.js","sourcesContent":["// export default \"https://localhost:8443/ZotRides/\";\nexport default \"http://172.31.28.39:8080/ZotRides/\";","import { Formik } from 'formik';\nimport { Form, Button } from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport jQuery from 'jquery';\nimport HOST from '../../Host';\nimport ReCaptcha from 'react-google-recaptcha';\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{username:\"c@email.com\", password:\"c2\"}}\n            onSubmit={(async (values) => {\n                // props.setLoading(true);\n                // console.log(JSON.parse(JSON.stringify(values)));\n                console.log(\"Sending\");\n                console.log(values);\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: values,\n                    url: HOST + \"api/login\",\n                    success: (resultData) => {\n                        //setCar(resultData[0]);\n                        //setLoading(false);\n                        console.log(JSON.stringify(resultData));\n                        if(resultData.status === \"fail\")\n                            props.setError(resultData.message);\n                        else\n                            props.setSuccess(true);\n                    },\n                    error: (resultData) => {\n                        props.setError(\"Invalid email/password\");\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"username\"}\n                            id={\"username\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.username}\n                            placeholder={\"Enter username\"}\n                            isInvalid={touched.username && errors.username}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type={\"password\"}\n                            name={\"password\"}\n                            id={\"password\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                            placeholder={\"Enter password\"}\n                            isInvalid={touched.password && errors.password}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <ReCaptcha\n                            sitekey={\"6LdFer8aAAAAACdsGnif7x0qN-yvVYsYPlyMCIAW\"}\n                            onChange={(value) => values.recaptcha = value}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Login</Button>\n                    <LinkContainer to={\"/_dashboard\"}>\n                        <Button variant={\"link\"} value={\"register\"}>Employee Login</Button>\n                    </LinkContainer>\n                </Form>\n            )}\n        </Formik>\n    )\n}","\nimport {useState} from 'react';\n\nimport {Card, Col, Container, Row, Fade} from \"react-bootstrap\";\nimport LoadingOverlay from 'react-loading-overlay';\n\nimport SignIn from \"./Login/SignIn\";\nimport {Redirect} from \"react-router\";\n\nexport default function() {\n    const [formType, setForm] = useState('login');\n    const [success, setSuccess] = useState(false);\n    const [error, setError] = useState();\n    const [isLoading, setLoading] = useState(false);\n\n    const switchForm = (event) => {\n        setError();\n        if(event.target.value === \"login\") {\n            setForm('login');\n        } else {\n            setForm('register');\n        }\n    }\n\n    const getError = (error) => {\n        let err = null;\n        error.message ? err = error.message : err = error;\n        return err;\n    }\n\n    if(success)\n        return (<Redirect to={\"/\"} />)\n\n    return(\n        <Container className={\"pt-5\"}>\n            <Row>\n                <Col>\n                    <h1>Welcome to ZotRides</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <LoadingOverlay active={isLoading} spinner text={'Logging in...'}>\n                        <Card.Body>\n                            <SignIn switchForm={switchForm} setLoading={setLoading} setError={setError} setSuccess={setSuccess}/>\n                            {/*{*/}\n                            {/*    formType === 'register' &&*/}\n                            {/*    <SignUp switchForm={switchForm} setLoading={setLoading} />*/}\n                            {/*}*/}\n                            {\n                                error &&\n                                <Fade in={true}>\n                                    <div>\n                                        <br />\n                                        <p>ERROR: {getError(error)}</p>\n                                    </div>\n                                </Fade>\n                            }\n                        </Card.Body>\n                        </LoadingOverlay>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import {useState, useEffect} from 'react';\nimport {Button, Col, Row, Jumbotron, Container} from 'react-bootstrap';\nimport {Typeahead} from \"react-bootstrap-typeahead\";\nimport './stylesheets/Home.css';\nimport jQuery from \"jquery\";\nimport HOST from \"../Host\";\nimport {Redirect} from \"react-router\";\n\nexport default function Home() {\n    const [singleSelections, setSingleSelections] = useState([]);\n    const [text, setText] = useState(\"\");\n    const [options, setOptions] = useState([]);\n    const [success, setSuccess] = useState(false);\n    const [redirectId, setRedirectId] = useState();\n    const [redirect, setRedirect] = useState(false);\n    const [cache, setCache] = useState({});\n    const [activeIndex, setActiveIndex] = useState(-1);\n\n    useEffect(() => {\n        const timeOutId = setTimeout(() => runQuery(text), 300);\n        return () => clearTimeout(timeOutId);\n    }, [text]);\n\n    function runQuery(input) {\n        var match = \"\";\n        if(input.length >= 3 && Object.keys(cache).some((element) => {\n            match = element;\n            return ~element.indexOf(input.toLowerCase());\n        })) {\n            console.log(\"Autocomplete options populated from cache\");\n            setOptions(cache[match]);\n            console.log(\"Used options:\");\n            console.log(cache[match]);\n        } else if(input.length >= 3) {\n            console.log(\"Autocomplete options populated from database\");\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"POST\",\n                data: {token: input.toLowerCase()},\n                url: HOST + \"api/autocomplete\",\n                success: (resultData) => {\n                    setOptions(resultData.results);\n                    const temp = cache;\n                    temp[input] = resultData.results;\n                    console.log(\"Added to cache\")\n                    setCache(temp);\n                    console.log(\"Used options:\");\n                    console.log(temp[input]);\n                }\n            });\n        } else {\n            setOptions([]);\n        }\n    }\n\n    function onChange(input) {\n        setText(input.toLowerCase());\n    }\n    function onSelect(input) {\n        setSingleSelections(input);\n        options.map(element => {\n            if(input[0] === element[\"car_name\"])\n                setRedirectId(element[\"car_id\"]);\n        })\n        setSuccess(true);\n    }\n\n    function handleKey(e) {\n        if (e.key === \"Enter\" && activeIndex === -1) {\n            setRedirect(true);\n        }\n    }\n\n    if(redirect)\n        return (<Redirect to={\"/browse/na/na/na/na/na/na/\" + text}/>);\n    if(success)\n        return (<Redirect to={\"/cars/\" + redirectId}  />)\n    return (\n        <div>\n            <Jumbotron className={\"hero-section\"}>\n                <Container>\n                    <h1>Welcome to ZotRides</h1>\n                    <p className={\"subtitle\"}>Book unforgettable cars from locations around the world</p>\n                    <Row>\n                        <Col>\n                            <Typeahead\n                                onInputChange={onChange}\n                                delay={300}\n                                id=\"basic-typeahead-single\"\n                                labelKey=\"name\"\n                                onChange={onSelect}\n                                options={options.map((element => {return element[\"car_name\"]}))}\n                                placeholder=\"Enter model name...\"\n                                selected={singleSelections}\n                                onKeyDown={handleKey}\n                                filterBy={() => true}\n                            >\n                                {(state) => {\n                                    // Passing a child render function to the component exposes partial\n                                    // internal state, including the index of the highlighted menu item.\n                                    setActiveIndex(state.activeIndex);\n                                }}\n                            </Typeahead>\n                        </Col>\n                        <Col xs={1}>\n                            <Button onClick={()=>{if(text.length !== 0) setRedirect(true)}}>Search</Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </div>\n    );\n}\n","import {Container, Jumbotron} from \"react-bootstrap\";\nimport React from \"react\";\n\nimport '../stylesheets/Template.css';\n\nexport default function(props) {\n    return (\n        <Jumbotron className={\"header\"}>\n            <Container>\n                <h1>{props.title}</h1>\n            </Container>\n        </Jumbotron>\n    )\n}","import DatePicker from \"react-date-picker\";\nimport {Form, Button} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport jQuery from \"jquery\";\nimport {Formik} from \"formik\";\nimport HOST from \"../../Host\";\nimport {Redirect} from \"react-router\";\n\nexport default function(props) {\n    const [submitted, setSubmitted] = useState(false);\n    if(submitted)\n        return <Redirect to={\"/mycart\"} />\n    return (\n        <Formik\n            initialValues={{\n                name: props.name,\n                carID: props.carID,\n                unitPrice: props.unitPrice\n            }}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: {\n                        ...values,\n                        endDate: dateToString(values.endDate),\n                        startDate: dateToString(values.startDate)\n                    },\n                    url: HOST + \"api/shopping-cart\",\n                    success: (resultData) => {\n                        console.log(JSON.stringify(resultData));\n                        setSubmitted(true);\n                        // if(resultData.status === \"fail\")\n                        //     props.setError(\"Login failed (Invalid username/password\");\n                        // else\n                        //     props.setSuccess(true);\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  errors,\n                  setFieldValue,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Start Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"startDate\"}\n                            value={values.startDate}\n                            onChange={(val) => setFieldValue('startDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>End Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"endDate\"}\n                            value={values.endDate}\n                            onChange={(val) => setFieldValue('endDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Pickup Location</Form.Label>\n                        <select\n                            name=\"pickupLocation\"\n                            value={values.pickLocation}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            style={{ display: 'block' }}\n                        >\n                            <option value=\"\" label=\"Select a location\" />\n                            {\n                                props.locations.map((location, index) => (\n                                    <option value={location} key={index}>\n                                        {location}\n                                    </option>\n                                ))\n                            }\n                        </select>\n\n                    </Form.Group>\n\n                    <Button variant={\"primary\"} type={\"submit\"}>Add to cart</Button>\n                </Form>\n            )}\n        </Formik>\n        // <div>\n        //     <Form\n        //     <h2>$317/day</h2>\n        //     <hr />\n        //     <h4>Trip start</h4>\n        //     <DatePicker onChange={onStartChange} value={startDate}/>\n        //     <h4>Trip end</h4>\n        //     <DatePicker onChange={onEndChange} value={endDate}/>\n        //     <h4>Pickup location</h4>\n        //     <Dropdown>\n        //         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        //             Pickup Location\n        //         </Dropdown.Toggle>\n        //\n        //         <Dropdown.Menu>\n        //             <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n        //             <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n        //             <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n        //         </Dropdown.Menu>\n        //     </Dropdown>\n        //     <Button>Continue</Button>\n        //     <hr />\n        // </div>\n    )\n}\n\nfunction dateToString(input) {\n    return formatDate(input)\n}\n\nfunction formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('/');\n}","import {useEffect, useState} from 'react';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport './stylesheets/Template.css';\nimport jQuery from 'jquery';\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport React from \"react\";\nimport Header from \"./Template/Header\";\nimport ReservationForm from \"./SingleCar/ReservationForm\";\nimport HOST from \"../Host\";\nimport {Redirect} from \"react-router\";\n\n\nexport default function SingleCar(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [car, setCar] = useState(EMPTY_CAR);\n    const [redirect, setRedirect] = useState(false);\n\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/single-car?id=\" + props.match.params.carId,\n            success: (resultData) => {\n                setCar(resultData[0]);\n                setLoading(false);\n            }\n        });\n    }, [])\n\n    function handleClick() {\n        setRedirect(true);\n    }\n\n    if(isLoading) {\n        return (<div>Loading...</div>)\n    }\n    console.log(redirect);\n    if(redirect) return <Redirect to={\"/browse/na/na/na/na/na/t\"} />\n    console.log();\n    return (\n        <div>\n            <Header title={\"Single Car Page\"}/>\n            <Container fluid className={\"pl-5\"}>\n                <Row>\n                    <Col xs={7}>\n                        <Row>\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>The car</p>\n                            </Col>\n                            <Col>\n                                <h1>{car.car_name}</h1>\n                                <LinkContainer to={\"/browse/na/na/na/na/\" + car.car_category}>\n                                    <p><i>{car.car_category}</i></p>\n                                </LinkContainer>\n                                <p>{car.car_rating} &#9733; ({car.car_votes} votes)</p>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>Hosted at</p>\n                            </Col>\n                            <Col>\n                                {\n                                    car.location_address.split(';').map((location, index) => (\n                                        <Col>\n                                        <LinkContainer to={\"/locations/\" + car.location_ids.split(';')[index]}>\n                                            <Button variant=\"link\" key={index}>{location}</Button>\n                                        </LinkContainer>\n                                        </Col>\n\n                                ))}\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col>\n                        <ReservationForm name={car.car_name} carID={car.car_id} unitPrice={120} locationids={car.location_ids.split(';')} locations={car.location_address.split(';')}/>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Button variant=\"link\" onClick={handleClick}>\n                        >> Back to Car List\n                    </Button>\n\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst EMPTY_CAR = {\n    car_category: \"NULL\",\n    car_id: \"NULL\",\n    car_name: \"NULL\",\n    car_rating: -1,\n    car_votes: -1,\n    location_address: [\"NULL\",\"NULL\",\"NULL\"],\n    location_phone: [\"NULL\",\"NULL\",\"NULL\"]\n}","import {useEffect, useState} from 'react';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport './stylesheets/Template.css';\nimport jQuery from 'jquery';\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport React from \"react\";\nimport Header from \"./Template/Header\";\nimport HOST from \"../Host\";\n\nexport default function SingleLocation(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [location, setLocation] = useState(EMPTY_LOCATION);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",  // Setting return data type\n            method: \"GET\",// Setting request method\n            url: HOST + \"api/single-loc?id=\" + props.match.params.locationId,\n            success: (resultData) => {\n                setLocation(resultData[0]);\n                setLoading(false);\n                console.log(resultData)\n            }\n        });\n    }, [])\n    if(isLoading) {\n        return (<div>Loading...</div>)\n    }\n    console.log(location)\n    return (\n        <div>\n            <Header title={\"Single Location Page\"} />\n            <Container fluid>\n                <Row>\n                    <Col xs={7}>\n                        <Row>\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>The location</p>\n                            </Col>\n                            <Col>\n                                <h1>{location.location_address}</h1>\n                                <p>{location.location_phone}</p>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>Cars here</p>\n                            </Col>\n                            <Col>\n                                {\n                                    location.cars_offered.split(';').map((car, index) => (\n                                        <Col>\n                                            <LinkContainer to={\"/cars/\" + location.cars_ids.split(\";\")[index]}>\n                                                <Button variant=\"link\" key={index}>{car}</Button>\n                                            </LinkContainer>\n                                        </Col>\n                                    ))\n                                }\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row>\n                    <LinkContainer to={'/browse/na/na/na/na/na/t'}>\n                        <Button variant=\"link\">\n                            >> Back to Car List\n                        </Button>\n                    </LinkContainer>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst EMPTY_LOCATION = {\n    cars_ids: \"NULL\",\n    cars_offered: \"NULL\",\n    location_address: \"NULL\",\n    location_id: \"NULL\",\n    location_phone: \"NULL\"\n}","import {Button, Form} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport {Redirect} from \"react-router\";\nimport {useState} from \"react\";\n\nexport default function(props) {\n    const [complete, setComplete] = useState(false);\n    const [query, setQuery] = useState({defaultQuery});\n    if (complete) {\n        props.setModalShow(false);\n        return (<Redirect to={\"/browse\" + \"/\" + query.model + \"/\" + query.year + \"/\" + query.make + \"/\" + query.location}/>);\n    }\n    return (\n        <Formik\n            // TODO: When all are empty return movie list\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                // props.setLoading(true);\n                if (values.model == null)\n                    values.model = 'na';\n                if (values.year == null)\n                    values.year = 'na';\n                if (values.make == null)\n                    values.make = 'na';\n                if (values.location == null)\n                    values.location = 'na';\n                setQuery(values);\n                setComplete(true);\n                window.location.reload(false);\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Car Model</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"model\"}\n                            id={\"model\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.model}\n                            placeholder={\"Enter model name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Year</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"year\"}\n                            id={\"year\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.year}\n                            placeholder={\"Enter year\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Make</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"make\"}\n                            id={\"make\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.make}\n                            placeholder={\"Enter make\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Location</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"location\"}\n                            id={\"location\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.location}\n                            placeholder={\"Enter location\"}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Search</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nconst defaultQuery = {\n    model: \"na\",\n    year: \"na\",\n    make: \"na\",\n    location: \"na\"\n}","import {Modal} from \"react-bootstrap\";\nimport SearchForm from \"./SearchModal/SearchForm\";\n\nexport default function (props) {\n\n    return(\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Search for Car\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <SearchForm setModalShow={props.setModalShow}/>\n            </Modal.Body>\n        </Modal>\n    )\n}","import {Modal, Button} from \"react-bootstrap\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../Host\";\nimport {Redirect} from \"react-router\";\n\nexport default function (props) {\n    const [categories, setCategories] = useState();\n    const [isLoading, setLoading] = useState(true);\n    const [redirectURL, setRedirectURL] = useState(\"\");\n    const [redirect, setRedirect] = useState(false);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/categories\",\n            success: (resultData) => {\n                console.log(resultData);\n                setCategories(resultData.map((element) => {\n                    return element.category\n                }));\n                setLoading(false);\n            }\n        });\n    }, []);\n\n    function handleClick(event) {\n        props.setModalShow(false);\n        setRedirectURL(\"/browse/na/na/na/na/\" + event.target.id);\n        setRedirect(true);\n    }\n    if(redirect)\n        return (<Redirect to={redirectURL}/>);\n\n    if(isLoading)\n        return <div></div>\n    return(\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Search for Car\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {\n                    categories.map((category) => (\n                        <Button id={category} onClick={handleClick} variant={\"link\"}>{category}</Button>\n                    ))\n                }\n            </Modal.Body>\n        </Modal>\n    )\n}","import {useState} from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport SearchModal from \"./Search/SearchModal\";\nimport VehicleTypeModal from \"./NavBarModals/VehicleTypeModal\";\n\nexport default function MyNav(props) {\n    const [modalShow, setModalShow] = useState(false);\n    const [browseTypeModalShow, setBrowseTypeModalShow] = useState(false);\n    const [browseLetterModalShow, setBrowseLetterModalShow] = useState(false);\n\n    const handleClick = () => setModalShow(!modalShow);\n    const handleBrowseType = () => {\n        setBrowseTypeModalShow(!browseTypeModalShow);\n    }\n    console.log(browseTypeModalShow)\n    return (\n        <div>\n            <VehicleTypeModal show={browseTypeModalShow}\n                              onHide={() => setBrowseTypeModalShow(false)}\n                              setModalShow={setBrowseTypeModalShow}\n            />\n            <SearchModal show={modalShow}\n                         onHide={() => setModalShow(false)}\n                         setModalShow={setModalShow}\n            />\n            <Navbar variant=\"light\" className={\"myNav\"}>\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand>\n                        <img\n                            src={\"https://i.ibb.co/hKLvRdN/Screen-Shot-2021-04-16-at-4-24-19-PM.png\"}\n                            style={{width: \"145px\"}}\n                        />\n                    </Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className={\"mr-auto\"}>\n                        <LinkContainer to={\"/browseby\"}>\n                            <Nav.Link>Make Query</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                    <Nav className={\"ml-auto\"}>\n                        {/*// TODO: Connecting search with variable flag*/}\n                        <LinkContainer to=\"/mycart\">\n                            <Nav.Link>My Cart</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}","import {useEffect, useState} from 'react';\nimport {Card, ListGroup, Col, Button} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport jQuery from \"jquery\";\nimport HOST from \"../../Host\";\nimport \"../stylesheets/CarCard.css\";\n\nexport default function CarCard(props) {\n    const [imageurl, setImageurl] = useState('https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-GWIN1aUTRO8HI2WwVEzIA.1440x700.jpg')\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            data: {make: jankyCarMake(props.name), category: props.category},\n            url: HOST + \"/api/get-image\",\n            success: (resultData) => {\n                setImageurl(resultData.imageurl);\n            }\n        });\n    }, [])\n\n    function handleRedirect() {\n        console.log(\"yes\")\n        props.handleCategorySelect(props.category);\n    }\n\n    return (\n        <Col xs={4} className={\"pt-3\"}>\n            <Card className={'text-center card'}>\n                <LinkContainer to={'/cars/' + props.id}>\n                    <Card.Img\n                        className={'mx-auto'}\n                        variant={'top'}\n                        src={imageurl}\n                    />\n                </LinkContainer>\n                <Card.Body className={'pt-1'}>\n                    <LinkContainer to={'/cars/' + props.id}>\n                        <Card.Title style={{fontSize: '30px'}} className={'mb-1'}>\n                            {props.name}\n                        </Card.Title>\n                    </LinkContainer>\n                    <p onClick={handleRedirect}>{props.category}</p>\n                    <p>{props.rating} &#9733; ({props.votes} votes)</p>\n                    <ListGroup variant=\"flush\">\n                        {props.locations.map((location, index) => (\n                            <LinkContainer to={'/locations/' + props.locationId[index]}>\n                                <ListGroup.Item key={index}>\n                                    {location} <br/>\n                                    {props.phone[index]}\n                                </ListGroup.Item>\n                            </LinkContainer>\n                        ))}\n                    </ListGroup>\n                    <LinkContainer to={'/cars/' + props.id}>\n                        <Button>Reserve</Button>\n                    </LinkContainer>\n\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nfunction jankyCarMake(name) {\n    var temp = name.split(\" \")[0];\n    if(temp == \"Alfa\")\n        return \"Alfa Romeo\";\n    else if(temp == \"Aston\")\n        return \"Aston Martin\";\n    else\n        return temp;\n}","import Header from \"./Template/Header\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport CarCard from \"./Home/CarCard\";\nimport HOST from \"../Host\";\n\nexport default function(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [cars, setCars] = useState([]);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: removeEmpty(props.match.params),\n            url: HOST + \"api/search-car\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else\n                    setCars(resultData);\n                setLoading(false);\n            }\n            // setComplete(true);\n        });\n    }, [])\n\n    if (isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n            <Header title={\"Search Results\"}/>\n            <Container fluid>\n                <Row>\n                    <Col>\n                        <p>Model: {props.match.params.model}</p>\n                        <p>Year: {props.match.params.year}</p>\n                        <p>Make: {props.match.params.make}</p>\n                        <p>Location: {props.match.params.location}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    {cars.map((car, index) => (\n                        <CarCard\n                            key={index}\n                            id={car.car_id}\n                            name={car.car_name}\n                            category={car.car_category}\n                            rating={car.car_rating}\n                            votes={car.car_votes}\n                            locations={car.location_address.split(';')}\n                            locationId={car.location_ids.split(';')}\n                            phone={car.location_phone.split(';')}\n                        />\n                    ))}\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nfunction removeEmpty(object) {\n    if(object.model === \"na\" || object.model == null)\n        delete object.model;\n    if(object.year === \"na\" || object.year == null)\n        delete object.year;\n    if(object.make === \"na\" || object.make == null)\n        delete object.make;\n    if(object.location === \"na\" || object.location == null)\n        delete object.location;\n    return object;\n}","import DatePicker from \"react-date-picker\";\nimport {Form, Button} from \"react-bootstrap\";\nimport React from \"react\";\nimport jQuery from \"jquery\";\nimport {Formik} from \"formik\";\nimport HOST from \"../../Host\";\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: {\n                        endDate: dateToString(values.endDate),\n                        startDate: dateToString(values.startDate),\n                        itemID: props.id\n                    },\n                    url: HOST + \"api/modify-cart-item\",\n                    success: (resultData) => {\n                        console.log(resultData)\n                        window.location.reload(false);\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  values,\n                  errors,\n                  setFieldValue,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Start Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"startDate\"}\n                            value={values.startDate}\n                            onChange={(val) => setFieldValue('startDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>End Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"endDate\"}\n                            value={values.endDate}\n                            onChange={(val) => setFieldValue('endDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Update Reservation</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\n\nfunction dateToString(input) {\n    return formatDate(input)\n}\n\nfunction formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('/');\n}","import {Col, Modal, Row} from \"react-bootstrap\";\nimport UpdateCartForm from \"../UpdateCartForm\";\n\nexport default function(props) {\n    return (\n        <Modal\n            show={props.showUpdate}\n            onHide={() => props.setUpdate(false)}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Update Reservation\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col xs={6}\n                         style={{\n                             backgroundImage: \"url('https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-GWIN1aUTRO8HI2WwVEzIA.1440x700.jpg')\",\n                             backgroundSize: \"cover\",\n                             backgroundPosition: \"center\"\n                         }}>\n                    </Col>\n                    <Col>\n                        <UpdateCartForm\n                            id={props.carID}\n                        />\n                    </Col>\n                </Row>\n            </Modal.Body>\n        </Modal>\n    )\n}","import {Button, Card} from \"react-bootstrap\";\nimport {useState} from \"react\";\nimport UpdateModal from \"./CartItem/UpdateModal\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../Host\";\n\nexport default function(props) {\n\n    const [showUpdate, setUpdate] = useState(false);\n\n    function handleUpdate() {\n        setUpdate(!showUpdate);\n    }\n\n    function removeItem() {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {\n                itemID: props.id\n            },\n            url: HOST + \"api/delete-cart-item\",\n            success: (resultData) => {\n                console.log(resultData);\n                window.location.reload(false);\n            }\n        });\n    }\n\n    return (\n        <div>\n            <UpdateModal showUpdate={showUpdate} setUpdate={setUpdate} carID={props.id} />\n            <Card className={'text-center'}>\n                <Card.Img\n                    className={'mx-auto'}\n                    variant={'top'}\n                    src={'https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-GWIN1aUTRO8HI2WwVEzIA.1440x700.jpg'}\n                />\n                <Card.Body className={'pt-1'}>\n                    <Card.Title style={{fontSize: '30px'}} className={'mb-1'}>\n                        {props.name}\n                    </Card.Title>\n                    <p>Price per Day: ${props.price}</p>\n                    <p>Total Price: ${props.price*daysInBetween(props.start, props.end)}</p>\n                    <p>Days: {daysInBetween(props.start, props.end)}</p>\n                    <p>Pickup Location: {props.location}</p>\n                    <p>Start Date: {props.start}</p>\n                    <p>End Date: {props.end}</p>\n                    <Button onClick={handleUpdate}>Update</Button>\n                    <Button className={\"ml-4\"} onClick={removeItem}>Remove</Button>\n                </Card.Body>\n\n            </Card>\n        </div>\n    )\n}\n\nfunction daysInBetween(start, end) {\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const fDate = start.split(\"/\");\n    const sDate = end.split(\"/\");\n    const firstDate = new Date(fDate[0], fDate[1], fDate[2]);\n    const secondDate = new Date(sDate[0], sDate[1], sDate[2]);\n    return Math.round(Math.abs((firstDate - secondDate) / oneDay));\n}","import Header from \"./Template/Header\";\nimport CartItem from \"./MyCart/CartItem\";\nimport {Container, Button, Row, Col, Image} from \"react-bootstrap\";\nimport {LinkContainer} from 'react-router-bootstrap';\nimport React, {useState, useEffect} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../Host\";\n\nexport default function() {\n    const [isLoading, setLoading] = useState(true);\n    const [cars, setCars] = useState([]);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/shopping-cart\",\n            success: (resultData) => {\n                setCars(resultData.previousItems);\n                setLoading(false);\n                console.log(resultData);\n            }\n        });\n    }, [])\n\n    if (isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n        <Header title={\"My Cart\"}/>\n        <Container>\n            <Row>\n                <Col xs={8}>\n                    {cars.map((car, index) => (\n                        <CartItem\n                            key={index}\n                            id={car.id}\n                            name={car.name}\n                            location={car.pickupLocation}\n                            start={car.startDate}\n                            end={car.endDate}\n                            price={car.unitPrice}\n                        />\n                    ))}\n                </Col>\n                <Col>\n                    <LinkContainer to={\"/payment\"}>\n                        <Button>Continue to Payment</Button>\n                    </LinkContainer>\n\n                </Col>\n            </Row>\n            <Row>\n                <LinkContainer to={'/browse/na/na/na/na/na/t'}>\n                    <Button variant=\"link\">\n                        >> Back to Car List\n                    </Button>\n                </LinkContainer>\n            </Row>\n        </Container>\n        </div>\n\n    )\n}","import jQuery from \"jquery\";\nimport HOST from \"../../Host\";\nimport {Button, Form, Row, Col} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport React from \"react\";\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: {\n                        firstName: values.firstname,\n                        lastName: values.lastname,\n                        ccNumber: values.cc,\n                        expDate: values.year + \"/\" + values.month + \"/\" + values.day\n                    },\n                    url: HOST + \"api/payment\",\n                    success: (resultData) => {\n                        console.log(resultData);\n                        if(resultData.status === \"fail\") {\n                            props.setFailed(true);\n                        } else {\n                            props.setCompleted(true);\n                            props.setSalesId(resultData.message);\n                        }\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>First name</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"firstname\"}\n                            id={\"firstname\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.firstname}\n                            placeholder={\"Enter First Name\"}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"lastname\"}\n                            id={\"lastname\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.lastname}\n                            placeholder={\"Enter Last Name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Credit Card Number</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"cc\"}\n                            id={\"cc\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.cc}\n                            placeholder={\"Enter Credit Card Number\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Expiration Date</Form.Label>\n                        <Row>\n                            <Col>\n                            <Form.Control\n                                type={\"string\"}\n                                name={\"year\"}\n                                id={\"year\"}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.year}\n                                placeholder={\"Enter year\"}\n                            />\n                            </Col>\n                            <Col>\n                            <Form.Control\n                                type={\"string\"}\n                                name={\"month\"}\n                                id={\"month\"}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.month}\n                                placeholder={\"Enter month\"}\n                            />\n                            </Col>\n                            <Col>\n                            <Form.Control\n                                type={\"string\"}\n                                name={\"day\"}\n                                id={\"day\"}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.day}\n                                placeholder={\"Enter day\"}\n                            />\n                            </Col>\n                        </Row>\n\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Continue</Button>\n                    {/*<Button variant={\"link\"} value={\"register\"} onClick={props.switchForm}>Create an Account</Button>*/}\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nfunction generateNumArray(total) {\n    var result = [];\n    var y = 0;\n    for(var i=1; i<total; i++) {\n        result[y++] = i;\n    }\n    return result;\n}\n\nfunction generateNumArrayWithStart(start, total) {\n    var result = [];\n    var y = 0;\n    for(var i=start; i<total; i++) {\n        result[y++] = i;\n    }\n    return result;\n}","import {Card} from \"react-bootstrap\";\n\nexport default function(props) {\n    return (\n        <Card className={'text-center'}>\n            <Card.Img\n                className={'mx-auto'}\n                variant={'top'}\n                src={'https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-GWIN1aUTRO8HI2WwVEzIA.1440x700.jpg'}\n            />\n            <Card.Body className={'pt-1'}>\n                <Card.Title style={{fontSize: '30px'}} className={'mb-1'}>\n                    {props.name}\n                </Card.Title>\n                <p>Days: {daysInBetween(props.start, props.end)}</p>\n                <p>Pickup Location: {props.location}</p>\n                <p>Start Date: {props.start}</p>\n                <p>End Date: {props.end}</p>\n            </Card.Body>\n\n        </Card>\n    )\n}\n\nfunction daysInBetween(start, end) {\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const fDate = start.split(\"/\");\n    const sDate = end.split(\"/\");\n    const firstDate = new Date(fDate[0], fDate[1], fDate[2]);\n    const secondDate = new Date(sDate[0], sDate[1], sDate[2]);\n    return Math.round(Math.abs((firstDate - secondDate) / oneDay));\n}","import {Container, Row, Col, Modal, Button} from \"react-bootstrap\";\nimport Header from \"./Template/Header\";\nimport PaymentForm from \"./Payments/PaymentForm\";\nimport React, {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../Host\";\n\nimport ConfirmationCard from \"./MyCart/ConfirmationCard\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nexport default function() {\n    const [isLoading, setLoading] = useState(true);\n    const [cars, setCars] = useState([]);\n    const [completed, setCompleted] = useState(false);\n    const [isFailed, setFailed] = useState(false);\n    const [salesId, setSalesId] = useState(-1);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/shopping-cart\",\n            success: (resultData) => {\n                setCars(resultData.previousItems);\n                setLoading(false);\n                console.log(resultData);\n            }\n        });\n    }, [])\n\n    const handleClose = () => setFailed(false);\n\n    console.log(cars);\n    if (isLoading) {\n        return (<div>Loading...</div>)\n    }\n    if (isFailed) {\n        return (\n            <Modal show={isFailed} onHide={handleClose} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>ALERT</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Transaction failed, please check your payment info</Modal.Body>\n            </Modal>\n        )\n    }\n    console.log(completed);\n    if (completed) {\n        return (\n            <div>\n                <Header title={\"Confirmation\"}/>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h1>Thank you for your order!</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <h3>Sales ID: {salesId}</h3>\n                            <h3>Total Price: ${calculateTotal(cars)}</h3>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <h2>Your reservations</h2>\n                    </Row>\n                    <Row>\n                        {cars.map((car, index) => (\n                            <Col xs={4}>\n                                <ConfirmationCard\n                                    key={index}\n                                    id={car.id}\n                                    name={car.name}\n                                    location={car.pickupLocation}\n                                    start={car.startDate}\n                                    end={car.endDate}\n                                    price={car.unitPrice}\n                                />\n                            </Col>\n                        ))}\n                    </Row>\n                    <Row>\n                        <LinkContainer to={'/browse/na/na/na/na/na/t'}>\n                            <Button variant=\"link\">\n                                >> Back to Car List\n                            </Button>\n                        </LinkContainer>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <Header title={\"Payment\"}/>\n            <Container>\n                <Row>\n                    <Col>\n                        <h1>Cart Price: ${calculateTotal(cars)}</h1>\n                    </Col>\n                    <Col>\n                        <PaymentForm setSalesId={setSalesId} setFailed={setFailed} setCompleted={setCompleted}/>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n\n    )\n}\n\nfunction calculateTotal(cars) {\n    var sum = 0;\n    for(var i=0; i<cars.length; i++) {\n        const element = cars[i];\n        sum += parseInt(daysInBetween(element.startDate, element.endDate) * element.unitPrice);\n    }\n    return sum;\n}\n\nfunction daysInBetween(start, end) {\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const fDate = start.split(\"/\");\n    const sDate = end.split(\"/\");\n    const firstDate = new Date(fDate[0], fDate[1], fDate[2]);\n    const secondDate = new Date(sDate[0], sDate[1], sDate[2]);\n    return Math.round(Math.abs((firstDate - secondDate) / oneDay));\n}","import {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../Host\";\nimport CarCard from \"./Home/CarCard\";\nimport {Container, Row, Col, Button} from \"react-bootstrap\";\n\nexport default function(props) {\n    const [cars, setCars] = useState({});\n    const [isLoading, setLoading] = useState(true);\n    const [message, setMessage] = useState(\"\");\n    const [whoFirst, setFirst] = useState(0);\n    const [ratingDescend, setRatingDescend] = useState(0);\n    const [nameDescend, setNameDescend] = useState(0);\n    const [redirect, setRedirect] = useState(\"\");\n\n\n    useEffect(() => {\n        const query = removeEmpty(props.match.params);\n        console.log(query);\n        if(query.retrace != null) {\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"GET\",\n                url: HOST + \"api/jump\",\n                success: (resultData) => {\n                    console.log(resultData);\n                    setFirst(resultData.sorting.ratingFirst);\n                    setRatingDescend(resultData.sorting.ratingDescend);\n                    setNameDescend(resultData.sorting.nameDescend);\n                    setCars(resultData.results);\n                    setMessage(resultData.message);\n                    setLoading(false);\n                }\n            });\n        } else if(query.key != null && query.key.length === 1) {\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"POST\",\n                data: {model: query.key},\n                url: HOST + \"api/browse-car\",\n                success: (resultData) => {\n                    setCars(resultData.results);\n                    setMessage(resultData.message);\n                    setLoading(false);\n                }\n            });\n        } else if(query.key != null) {\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"POST\",\n                data: {category: query.key},\n                url: HOST + \"api/browse-car\",\n                success: (resultData) => {\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);                }\n            });\n        } else if(query.fulltext != null) {\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"POST\",\n                data: {token: query.fulltext.replace(\"%20\", \" \")},\n                url: HOST + \"api/full-text-search\",\n                success: (resultData) => {\n\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);                }\n            });\n        } else {\n            jQuery.ajax({\n                dataType: \"json\",\n                method: \"POST\",\n                data: removeEmpty(props.match.params),\n                url: HOST + \"api/search-car\",\n                success: (resultData) => {\n                    if (resultData.status === \"fail\")\n                        props.setError(\"Login failed (Invalid username/password\");\n                    else {\n                        setMessage(resultData.message);\n                        setCars(resultData.results);\n                        setLoading(false);\n                    }\n                }\n            });\n        }\n    }, [])\n\n    function handleNext() {\n        setLoading(true);\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {pageStatus: 1},\n            url: HOST + \"api/paginate\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else {\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);\n                }\n            }\n        });\n    }\n\n    function handlePrevious() {\n        setLoading(true);\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {pageStatus: -1},\n            url: HOST + \"api/paginate\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else {\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);\n                }\n            }\n        });\n    }\n\n    function setShown(event) {\n        console.log(event.target.value);\n        setLoading(true);\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {resultsPerPage: event.target.value},\n            url: HOST + \"api/paginate\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else {\n                    console.log(resultData);\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);\n                }\n            }\n        });\n    }\n\n    function handleRatingSort(event) {\n        setRatingDescend(event.target.value);\n        sendSortQuery({\n            ratingFirst: whoFirst,\n            ratingDescend: event.target.value,\n            nameDescend: nameDescend\n        });\n    }\n\n    function handleNameSort(event) {\n        setNameDescend(event.target.value);\n        sendSortQuery({\n            ratingFirst: whoFirst,\n            ratingDescend: ratingDescend,\n            nameDescend: event.target.value\n        });\n    }\n\n    function handleSortPref(event) {\n        setFirst(event.target.value);\n        console.log(\"ratingFirst: \" + event.target.value);\n        sendSortQuery({\n            ratingFirst: event.target.value,\n            ratingDescend: ratingDescend,\n            nameDescend: nameDescend\n        });\n    }\n\n    function sendSortQuery(data) {\n        setLoading(true);\n        console.log(\"Sending:\");\n        console.log(data)\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: data,\n            url: HOST + \"api/sort\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else {\n                    console.log(resultData);\n                    setMessage(resultData.message);\n                    setCars(resultData.results);\n                    setLoading(false);\n                }\n            }\n        });\n    }\n\n    function handleCategorySelect(key) {\n        setLoading(true);\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"POST\",\n            data: {category: key},\n            url: HOST + \"api/browse-car\",\n            success: (resultData) => {\n                setMessage(resultData.message);\n                setCars(resultData.results);\n                setLoading(false);                }\n        });\n    }\n\n    if(isLoading)\n        return(<div>LOADING</div>)\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Button onClick={handlePrevious}>Previous</Button>\n                    <Button className={\"ml-3\"} onClick={handleNext}>Next</Button>\n                </Col>\n                <Col>\n                    <p>{message}</p>\n                </Col>\n                <Col>\n                    <select name=\"show\" id=\"cars\" onChange={setShown}>\n                        <option>Set show</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                    </select>\n                </Col>\n                <Col>\n                    <select name=\"sort\" id=\"sort\" value={whoFirst} onChange={handleSortPref}>\n                        <option value=\"1\">By Rating First</option>\n                        <option value=\"0\">By Title First</option>\n                    </select>\n                    <select name=\"sort\" id=\"sort\" value={nameDescend} onChange={handleNameSort}>\n                        <option value=\"0\">By Title Ascending</option>\n                        <option value=\"1\">By Title Descending</option>\n                    </select>\n                    <select name=\"sort\" id=\"sort\" value={ratingDescend} onChange={handleRatingSort}>\n                        <option value=\"0\">By Rating Ascending</option>\n                        <option value=\"1\">By Rating Descending</option>\n                    </select>\n                </Col>\n            </Row>\n            <Row>\n                {cars.map((car, index) => (\n                    <CarCard\n                        key={index}\n                        id={car.car_id}\n                        name={car.car_name}\n                        category={car.car_category}\n                        rating={car.car_rating}\n                        votes={car.car_votes}\n                        locations={car.location_address.split(';')}\n                        locationId={car.location_ids.split(';')}\n                        phone={car.location_phone.split(';')}\n                        handleCategorySelect={handleCategorySelect}\n                    />\n                ))}\n            </Row>\n        </Container>\n    )\n}\n\nfunction removeEmpty(object) {\n    if(object.model === \"na\" || object.model == null)\n        delete object.model;\n    if(object.year === \"na\" || object.year == null)\n        delete object.year;\n    if(object.make === \"na\" || object.make == null)\n        delete object.make;\n    if(object.location === \"na\" || object.location == null)\n        delete object.location;\n    if(object.key === \"na\" || object.key == null)\n        delete object.key;\n    if(object.retrace === \"na\" || object.retrace == null)\n        delete object.retrace;\n    if(object.fulltext === \"na\" || object.fulltext == null)\n        delete object.fulltext;\n    return object;\n}","import {Button, Form} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport {Redirect} from \"react-router\";\nimport {useState} from \"react\";\n\nexport default function() {\n    const [complete, setComplete] = useState(false);\n    const [query, setQuery] = useState({defaultQuery});\n    if (complete) {\n        return (<Redirect to={\"/browse\" + \"/\" + query.model + \"/\" + query.year + \"/\" + query.make + \"/\" + query.location}/>);\n    }\n    return (\n        <Formik\n            // TODO: When all are empty return movie list\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                // props.setLoading(true);\n                if (values.model == null)\n                    values.model = 'na';\n                if (values.year == null)\n                    values.year = 'na';\n                if (values.make == null)\n                    values.make = 'na';\n                if (values.location == null)\n                    values.location = 'na';\n                setQuery(values);\n                setComplete(true);\n                window.location.reload(false);\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Car Model</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"model\"}\n                            id={\"model\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.model}\n                            placeholder={\"Enter model name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Year</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"year\"}\n                            id={\"year\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.year}\n                            placeholder={\"Enter year\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Make</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"make\"}\n                            id={\"make\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.make}\n                            placeholder={\"Enter make\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Location</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"location\"}\n                            id={\"location\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.location}\n                            placeholder={\"Enter location\"}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Search</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nconst defaultQuery = {\n    model: \"na\",\n    year: \"na\",\n    make: \"na\",\n    location: \"na\"\n}","import {Col, Row, Container, Button} from \"react-bootstrap\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../Host\";\nimport {Redirect} from \"react-router\";\nimport SearchForm from \"./BrowseBy/SearchForm\";\n\nexport default function() {\n    const [categories, setCategories] = useState();\n    const [loading, setLoading] = useState(true);\n    const [redirect, setRedirect] = useState(false);\n    const [redirectURL, setRedirectURL] = useState(\"\");\n\n    useEffect(() => {\n        console.log(\"Asdfasdf\")\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/categories\",\n            success: (resultData) => {\n                console.log(resultData);\n                setCategories(resultData.map((element) => {\n                    return element.category\n                }));\n                setLoading(false);\n            }\n        });\n    }, []);\n\n    function handleClick(event) {\n        setRedirectURL(\"/browse/na/na/na/na/\" + event.target.id);\n        setRedirect(true);\n    }\n\n    if(loading) return <div>LOADING</div>\n    if(redirect) return <Redirect to={redirectURL}/>\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h1> Search </h1>\n                    <SearchForm />\n                </Col>\n                <Col>\n                    <h1> Browse by Vehicle Type </h1>\n                    {\n                        categories.map((category) => (\n                            <Button id={category} onClick={handleClick} variant={\"link\"}>{category}</Button>\n                        ))\n                    }\n                </Col>\n                <Col>\n                    <h1> Browse by Vehicle Name </h1>\n                    {\n                        letters.map((category) => (\n                            <Button id={category} onClick={handleClick} variant={\"link\"}>{category}</Button>\n                        ))\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nconst letters = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\", \"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"*\"]","import {Table} from \"react-bootstrap\";\n\nexport default function(props) {\n    console.log(props);\n    if(props.dbtitle === undefined)\n        return <div></div>\n    return (\n        <div>\n            <h5>{props.dbtitle}</h5>\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>Attributes</th>\n                    <th>Type</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    props.fields.map((element, index)=> (\n                        <tr>\n                            <th>{element}</th>\n                            <th>{props.types[index]}</th>\n                        </tr>\n                    ))\n                }\n                </tbody>\n            </Table>\n        </div>\n    )\n}","import {Button, Form, Modal} from \"react-bootstrap\";\nimport {useState} from \"react\";\nimport {Formik} from \"formik\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../../Host\";\n\nexport default function(props) {\n    const [success, setSuccess] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const handleClose = () => setSuccess(false);\n\n    if(success) {\n        return (\n            <Modal show={success} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Response Received!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{message}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    return (\n        <Formik\n            // TODO: When all are empty return movie list\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: values,\n                    url: HOST + \"api/add-car\",\n                    success: (resultData) => {\n                        if(resultData.errorMessage != null) {\n                            props.setError([resultData.errorMessage, \"\"]);\n                        } else {\n                            setMessage(resultData.message);\n                            setSuccess(true);\n                        }\n                    },\n                    error: (resultData) => {\n                        console.log(\"ERROr\")\n                        console.log(resultData)\n                    }\n\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Car Model</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"model\"}\n                            id={\"model\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.model}\n                            placeholder={\"Enter model name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Year</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"year\"}\n                            id={\"year\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.year}\n                            placeholder={\"Enter year\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Make</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"make\"}\n                            id={\"make\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.make}\n                            placeholder={\"Enter make\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Category</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"category\"}\n                            id={\"category\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.category}\n                            placeholder={\"Enter category\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car address</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"address\"}\n                            id={\"address\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.address}\n                            placeholder={\"Enter address\"}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Add</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}","import {Button, Form, Modal} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../../Host\";\nimport {useState} from \"react\";\n\nexport default function(props) {\n    const [success, setSuccess] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const handleClose = () => setSuccess(false);\n\n    if(success) {\n        return (\n            <Modal show={success} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Response Received!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{message}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    return (\n        <Formik\n            // TODO: When all are empty return movie list\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: values,\n                    url: HOST + \"api/add-loc\",\n                    success: (resultData) => {\n                        if(resultData.errorMessage != null) {\n                            props.setError([\"\", resultData.errorMessage]);\n                        } else {\n                            setMessage(resultData.message);\n                            setSuccess(true);\n                        }\n                    },\n                    error: (resultData) => {\n                        console.log(\"ERROR\")\n                        console.log(resultData)\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Address*</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"address\"}\n                            id={\"address\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.address}\n                            placeholder={\"Enter address name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Phone number</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"phoneNumber\"}\n                            id={\"phoneNumber\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.phoneNumber}\n                            placeholder={\"Enter Phone Number\"}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Add</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}","import {Col, Row} from \"react-bootstrap\";\nimport DBTable from \"./Dashboard/Table\";\nimport AddCarForm from \"./Dashboard/AddCarForm\";\nimport AddPickupForm from \"./Dashboard/AddPickupForm\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport HOST from \"../../Host\";\n\nexport default function() {\n    const [tables, setTables] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState([\"\",\"\"]);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            url: HOST + \"api/metadata\",\n            success: (resultData) => {\n                setTables(Object.values(resultData));\n                setLoading(false);\n            }\n            // setComplete(true);\n        });\n    }, [])\n\n    if(isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n            <h1>Dashboard</h1>\n            <h3 id={\"tables\"}>Tables</h3>\n            <Row>\n                {\n                    tables.map((element) => (\n                        <Col xs={3} >\n                            <DBTable\n                                dbtitle={element['tableName']}\n                                fields={element['fields']}\n                                types={element['types']}\n                            />\n                        </Col>\n                    ))\n                }\n            </Row>\n            <hr />\n            <h3 id={\"addcar\"}>Add car</h3>\n            <Row>\n                <Col>\n                    <AddCarForm setError={setError} />\n                    <p>{error[0]}</p>\n                </Col>\n            </Row>\n            <hr />\n            <h3 id={\"addpickup\"}>Add Pickup Location</h3>\n            <Row>\n                <Col>\n                    <AddPickupForm setError={setError}/>\n                    <p>{error[1]}</p>\n                </Col>\n            </Row>\n            <div className={\"end\"}/>\n        </div>\n    )\n}","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\nimport jQuery from 'jquery';\nimport HOST from '../../../Host';\nimport ReCaptcha from 'react-google-recaptcha';\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{username:\"classta@email.edu\", password:\"classta\"}}\n            onSubmit={(async (values) => {\n                console.log(values);\n\n                props.setLoading(true);\n                // TODO: Connect to correct employee login\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: values,\n                    url: HOST + \"api/employee-login\",\n                    success: (resultData) => {\n                        props.setLoading(false);\n                        console.log(JSON.stringify(resultData));\n\n                        if(resultData.status === \"fail\")\n                            props.setError(resultData.message);\n                        else\n                            props.setSuccess(true);\n                    },\n                    error: (resultData) => {\n                        props.setLoading(false);\n                        props.setError(\"Invalid email/password\");\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"username\"}\n                            id={\"username\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.username}\n                            placeholder={\"Enter username\"}\n                            isInvalid={touched.username && errors.username}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type={\"password\"}\n                            name={\"password\"}\n                            id={\"password\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                            placeholder={\"Enter password\"}\n                            isInvalid={touched.password && errors.password}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <ReCaptcha\n                            sitekey={\"6LdFer8aAAAAACdsGnif7x0qN-yvVYsYPlyMCIAW\"}\n                            onChange={(value) => values.recaptcha = value}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Login</Button>\n                    <LinkContainer to={\"/login\"}>\n                        <Button variant={\"link\"} value={\"register\"}>Customer Login</Button>\n                    </LinkContainer>\n                </Form>\n            )}\n        </Formik>\n    )\n}","import {Button, Card, Col, Container, Nav, Row} from \"react-bootstrap\";\nimport \"./stylesheets/EmployeeLogin.css\";\nimport Dashboard from \"./EmployeeLogin/Dashboard\";\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport {useState} from \"react\";\nimport SignIn from \"./EmployeeLogin/Dashboard/SignIn\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nexport default function () {\n    const [success, setSuccess] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState();\n\n    if(!success) {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                    <h1 className={\"text-center pt-5\"}>Dashboard Login</h1>\n                    <Card xs={4}>\n                        <LoadingOverlay active={isLoading} spinner text={'Logging in...'}>\n                            <Card.Body>\n                                <SignIn setLoading={setLoading} setError={setError} setSuccess={setSuccess} />\n                            </Card.Body>\n                            <div>{error}</div>\n                        </LoadingOverlay>\n                    </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n    return (\n        <Container fluid>\n            <Row>\n                <Col xs={2} className={\"sidebar\"}>\n                    <Nav defaultActiveKey={\"tables\"} className={\"flex-column\"}>\n                        <AnchorLink href='#tables'><Nav.Link className={\"nav-link\"} eventKey={\"tables\"}>Tables</Nav.Link></AnchorLink>\n                        <AnchorLink href='#addcar'><Nav.Link className={\"nav-link\"} eventKey={\"addcar\"}>Add Car</Nav.Link></AnchorLink>\n                        <AnchorLink href='#addpickup'><Nav.Link className={\"nav-link\"} eventKey={\"addpickup\"}>Add Pickup Location</Nav.Link></AnchorLink>\n                        <LinkContainer to={\"/\"}>\n                            <Nav.Link className={\"nav-link\"}>Go to site</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                </Col>\n                <Col xs={10}>\n                    <Dashboard />\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport SingleCar from './components/SingleCar';\nimport SingleLocation from './components/SingleLocation';\nimport Navbar from './components/NavBar';\nimport SearchResults from \"./components/SearchResults\";\nimport MyCart from \"./components/MyCart\";\nimport Payments from \"./components/Payments\";\nimport BrowseResults from \"./components/BrowseResults\";\nimport BrowseBy from \"./components/BrowseBy\";\nimport EmployeeLogin from \"./components/EmployeeLogin\";\n\nfunction App() {\n    return (\n        <Router basename={\"/ZotRides\"}>\n            <Switch>\n                <Route exact path={\"/(login)\"} component={LoginContainer} />\n                <Route exact path={\"/(_dashboard)\"} component={EmployeeLoginContainer} />\n                <Route component={DefaultContainer} />\n            </Switch>\n        </Router>\n    );\n}\n\nconst LoginContainer = () => (\n    <div>\n        <Route path=\"/login\" render={() => <Login />} />\n    </div>\n)\n\nconst EmployeeLoginContainer = () => (\n    <div>\n        <Route path=\"/_dashboard\" render={() => <EmployeeLogin />} />\n    </div>\n)\n\nconst DefaultContainer = () => (\n    <div>\n        <Navbar />\n        {/*<Route path=\"/browse/:query\" render={(props) => <Browse {...props} />} />*/}\n        {/*<Route path=\"/browse/:query/:category\" render={(props) => <Browse {...props} />} />*/}\n        <Route path=\"/\" exact render={() => <Home />} />\n        <Route path=\"/search/:model?/:year?/:make?/:location?\" render={(props) => <SearchResults {...props}/>} />\n        <Route path=\"/browse/:model?/:year?/:make?/:location?/:key?/:retrace?/:fulltext?\" render={(props) => <BrowseResults {...props}/>} />\n        <Route path=\"/mycart\" render={() => <MyCart />} />\n        <Route path=\"/payment\" render={() => <Payments />} />\n        <Route path=\"/cars/:carId\" render={(props) => <SingleCar {...props} />} />\n        <Route path=\"/locations/:locationId\" render={(props) => <SingleLocation {...props} />} />\n        <Route path=\"/browseby\" render={() => <BrowseBy />} />\n    </div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}