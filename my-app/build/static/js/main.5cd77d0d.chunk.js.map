{"version":3,"sources":["components/Login/SignIn.js","components/Login.js","components/Home/CarCard.js","components/Home.js","components/Template/Header.js","components/SingleCar/ReservationForm.js","components/SingleCar.js","components/SingleLocation.js","components/Search/SearchModal/SearchForm.js","components/Search/SearchModal.js","components/NavBar.js","components/Browse/Content.js","components/Browse.js","components/SearchResults.js","components/MyCart.js","App.js","reportWebVitals.js","index.js"],"names":["props","initialValues","username","password","onSubmit","values","a","jQuery","ajax","dataType","method","data","url","success","resultData","console","log","JSON","stringify","status","setError","setSuccess","handleSubmit","handleChange","handleBlur","touched","errors","Form","noValidate","Group","Label","Control","type","name","id","onChange","onBlur","value","placeholder","isInvalid","Feedback","Button","variant","onClick","switchForm","useState","setForm","error","isLoading","setLoading","to","Container","className","Row","Col","Card","active","spinner","text","Body","SignIn","event","target","Fade","in","message","getError","CarCard","xs","Img","src","Title","style","fontSize","category","rating","votes","ListGroup","locations","map","location","index","locationId","Item","phone","Home","cars","setCars","useEffect","Jumbotron","fluid","car","car_id","car_name","car_category","car_rating","car_votes","location_address","split","location_ids","location_phone","title","setFieldValue","startDate","val","endDate","display","label","locationids","SingleCar","EMPTY_CAR","setCar","match","params","carId","Header","textAlign","ReservationForm","SingleLocation","EMPTY_LOCATION","setLocation","cars_ids","cars_offered","location_id","complete","setComplete","defaultQuery","query","setQuery","setModalShow","model","year","make","window","reload","Modal","size","aria-labelledby","centered","closeButton","SearchForm","MyNav","modalShow","SearchModal","show","onHide","Navbar","Brand","width","Toggle","aria-controls","Collapse","Nav","Link","ButtonGroup","options","element","handleOptionSelect","toString","toLowerCase","Content","removeEmpty","object","LoginContainer","path","render","Login","DefaultContainer","Browse","exact","SearchResults","MyCart","App","basename","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cd77d0d.chunk.js","sourcesContent":["import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Button } from 'react-bootstrap';\nimport jQuery from 'jquery';\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{ username: \"mcosley@gmail.com\", password: \"peiod3\"}}\n            onSubmit={(async (values) => {\n                // props.setLoading(true);\n                // console.log(JSON.parse(JSON.stringify(values)));\n\n                jQuery.ajax({\n                    dataType: \"json\",\n                    method: \"POST\",\n                    data: values,\n                    // TODO: REMOVE HTTP://LOCALHOST WHEN BUILDING\n                    url: \"http://localhost:8080/cs122b_spring21_team_16_war/api/login\",\n                    // url: \"api/single-car?id=\" + props.match.params.carId,\n                    success: (resultData) => {\n                        //setCar(resultData[0]);\n                        //setLoading(false);\n                        console.log(JSON.stringify(resultData));\n                        if(resultData.status === \"fail\")\n                            props.setError(\"Login failed (Invalid username/password\");\n                        else\n                            props.setSuccess(true);\n                        // TODO : link to home page if succeeded, otherwise tell them to try again\n                    }\n                });\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"username\"}\n                            id={\"username\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.username}\n                            placeholder={\"Enter username\"}\n                            isInvalid={touched.username && errors.username}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type={\"password\"}\n                            name={\"password\"}\n                            id={\"password\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                            placeholder={\"Enter password\"}\n                            isInvalid={touched.password && errors.password}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Login</Button>\n                    <Button variant={\"link\"} value={\"register\"} onClick={props.switchForm}>Create an Account</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}","\nimport {useState} from 'react';\n\nimport {Card, Col, Container, Row, Fade} from \"react-bootstrap\";\nimport LoadingOverlay from 'react-loading-overlay';\n\nimport SignIn from \"./Login/SignIn\";\nimport SignUp from \"./Login/SignUp\";\nimport {Redirect} from \"react-router\";\n\nexport default function() {\n    const [formType, setForm] = useState('login');\n    const [success, setSuccess] = useState(false);\n    const [error, setError] = useState();\n    const [isLoading, setLoading] = useState(false);\n\n    const switchForm = (event) => {\n        setError();\n        if(event.target.value === \"login\") {\n            setForm('login');\n        } else {\n            setForm('register');\n        }\n    }\n\n    const getError = (error) => {\n        let err = null;\n        error.message ? err = error.message : err = error;\n        return err;\n    }\n\n    if(success)\n        return (<Redirect to={\"/\"} />)\n\n    return(\n        <Container className={\"pt-5\"}>\n            <Row>\n                <Col>\n                    <h1>Welcome to ZotRides</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <LoadingOverlay active={isLoading} spinner text={'Logging in...'}>\n                        <Card.Body>\n                            <SignIn switchForm={switchForm} setLoading={setLoading} setError={setError} setSuccess={setSuccess}/>\n                            {/*{*/}\n                            {/*    formType === 'register' &&*/}\n                            {/*    <SignUp switchForm={switchForm} setLoading={setLoading} />*/}\n                            {/*}*/}\n                            {\n                                error &&\n                                <Fade in={true}>\n                                    <div>\n                                        <br />\n                                        <p>ERROR: {getError(error)}</p>\n                                    </div>\n                                </Fade>\n                            }\n                        </Card.Body>\n                        </LoadingOverlay>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React from 'react';\nimport {Card, ListGroup, Col, Button} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\n\nexport default function CarCard(props) {\n\n    return (\n        <Col xs={4} className={\"pt-3\"}>\n            <Card className={'text-center'}>\n                <LinkContainer to={'/cars/' + props.id}>\n                    <Card.Img\n                        className={'mx-auto'}\n                        variant={'top'}\n                        src={'https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-GWIN1aUTRO8HI2WwVEzIA.1440x700.jpg'}\n                    />\n                </LinkContainer>\n                <Card.Body className={'pt-1'}>\n                    <LinkContainer to={'/cars/' + props.id}>\n                        <Card.Title style={{fontSize: '30px'}} className={'mb-1'}>\n                            {props.name}\n                        </Card.Title>\n                    </LinkContainer>\n                    <p>{props.category}</p>\n                    <p>{props.rating} &#9733; ({props.votes} votes)</p>\n                    <ListGroup variant=\"flush\">\n                        {props.locations.map((location, index) => (\n                            <LinkContainer to={'/locations/' + props.locationId[index]}>\n                                <ListGroup.Item key={index}>\n                                    {location} <br/>\n                                    {props.phone[index]}\n                                </ListGroup.Item>\n                            </LinkContainer>\n                        ))}\n                    </ListGroup>\n                    <LinkContainer to={'/cars/' + props.id}>\n                        <Button>Reserve</Button>\n                    </LinkContainer>\n\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}","import react, {useEffect, useState} from 'react';\nimport {Jumbotron, Container, Row, Col} from 'react-bootstrap';\nimport './stylesheets/Home.css';\n\nimport CarCard from \"./Home/CarCard\";\nimport jQuery from 'jquery';\n\nexport default function Home() {\n    const [isLoading, setLoading] = useState(true);\n    const [cars, setCars] = useState([]);\n\n    useEffect(() => {\n\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            // TODO: REMOVE HTTP://LOCALHOST WHEN BUILDING\n            url: \"http://localhost:8080/cs122b_spring21_team_16_war/api/cars\",\n            // url: \"api/cars\",\n            success: (resultData) => {\n                setCars(resultData);\n                setLoading(false);\n                console.log(resultData);\n            }\n        });\n    }, [])\n\n    if (isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n            <Jumbotron className={\"hero-section\"}>\n                <h1>Welcome to ZotRides</h1>\n                <p className={\"subtitle\"}>Book unforgettable cars from locations around the world</p>\n            </Jumbotron>\n            <Container fluid>\n                <Row>\n                    {cars.map((car, index) => (\n                        <CarCard\n                            key={index}\n                            id={car.car_id}\n                            name={car.car_name}\n                            category={car.car_category}\n                            rating={car.car_rating}\n                            votes={car.car_votes}\n                            locations={car.location_address.split(';')}\n                            locationId={car.location_ids.split(';')}\n                            phone={car.location_phone.split(';')}\n                        />\n                    ))}\n                </Row>\n            </Container>\n        </div>\n    );\n}\n","import {Container, Jumbotron} from \"react-bootstrap\";\nimport React from \"react\";\n\nimport '../stylesheets/Template.css';\n\nexport default function(props) {\n    return (\n        <Jumbotron className={\"header\"}>\n            <Container>\n                <h1>{props.title}</h1>\n            </Container>\n        </Jumbotron>\n    )\n}","import DatePicker from \"react-date-picker\";\nimport {Form, Button, Col, Dropdown, ListGroup} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport jQuery from \"jquery\";\nimport {Formik} from \"formik\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nexport default function(props) {\n    return (\n        <Formik\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                // props.setLoading(true);\n                // console.log(JSON.parse(JSON.stringify(values)));\n                console.log(values);\n\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  errors,\n                  setFieldValue,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Start Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"startDate\"}\n                            value={values.startDate}\n                            onChange={(val) => setFieldValue('startDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>End Date</Form.Label>\n                        <br />\n                        <DatePicker\n                            name={\"endDate\"}\n                            value={values.endDate}\n                            onChange={(val) => setFieldValue('endDate', val)}\n                        />\n                        <Form.Control.Feedback type={\"invalid\"}>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Pickup Location</Form.Label>\n                        <select\n                            name=\"location\"\n                            value={values.location}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            style={{ display: 'block' }}\n                        >\n                            <option value=\"\" label=\"Select a location\" />\n                            {\n                                props.locations.map((location, index) => (\n                                    <option value={props.locationids[index]} key={index}>\n                                        {location}\n                                    </option>\n                                ))\n                            }\n                        </select>\n\n                    </Form.Group>\n\n                    <Button variant={\"primary\"} type={\"submit\"}>Add to cart</Button>\n                </Form>\n            )}\n        </Formik>\n        // <div>\n        //     <Form\n        //     <h2>$317/day</h2>\n        //     <hr />\n        //     <h4>Trip start</h4>\n        //     <DatePicker onChange={onStartChange} value={startDate}/>\n        //     <h4>Trip end</h4>\n        //     <DatePicker onChange={onEndChange} value={endDate}/>\n        //     <h4>Pickup location</h4>\n        //     <Dropdown>\n        //         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        //             Pickup Location\n        //         </Dropdown.Toggle>\n        //\n        //         <Dropdown.Menu>\n        //             <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n        //             <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n        //             <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n        //         </Dropdown.Menu>\n        //     </Dropdown>\n        //     <Button>Continue</Button>\n        //     <hr />\n        // </div>\n    )\n}\nconst difficultyOptions = [\n    { value: 'beginner', label: 'Beginner'},\n    { value: 'intermediate', label: 'Intermediate'},\n    { value: 'advanced', label: 'Advanced'},\n];\n\nconst mealTimeOptions = [\n    { value: 'breakfast', label: 'Breakfast'},\n    { value: 'lunch', label: 'Lunch'},\n    { value: 'dinner', label: 'Dinner'},\n    { value: 'snacks', label: 'Snack'},\n];\n\nconst dishTypeOptions = [\n    { value: 'entrees', label: 'Entree'},\n    { value: 'sides', label: 'Side'},\n    { value: 'sauces', label: 'Sauce'},\n    { value: 'appetizers', label: 'Appetizer'},\n    { value: 'pastries', label: 'Pastry'},\n]\n\n\nconst groupedOptions = [\n    {\n        label: 'Difficulty',\n        options: difficultyOptions\n    },\n    {\n        label: 'Meal Time',\n        options: mealTimeOptions\n    },\n    {\n        label: 'Dish Type',\n        options: dishTypeOptions\n    }\n]","import react, {useEffect, useState} from 'react';\nimport {Jumbotron, Container, Row, Col, Button, Dropdown} from 'react-bootstrap';\nimport './stylesheets/Template.css';\nimport jQuery from 'jquery';\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport React from \"react\";\nimport Header from \"./Template/Header\";\nimport ReservationForm from \"./SingleCar/ReservationForm\";\n\n\nexport default function SingleCar(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [car, setCar] = useState(EMPTY_CAR);\n\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            // TODO: REMOVE HTTP://LOCALHOST WHEN BUILDING\n            url: \"http://localhost:8080/cs122b_spring21_team_16_war/api/single-car?id=\" + props.match.params.carId,\n            // url: \"api/single-car?id=\" + props.match.params.carId,\n            success: (resultData) => {\n                setCar(resultData[0]);\n                setLoading(false);\n            }\n        });\n    }, [])\n    if(isLoading) {\n        return (<div>Loading...</div>)\n    }\n    console.log(props)\n    return (\n        <div>\n            <Header title={\"Single Car Page\"}/>\n            <Container fluid className={\"pl-5\"}>\n                <Row>\n                    <Col xs={7}>\n                        <Row>\n                            {/*<Col>*/}\n                            {/*    <p>{car.car_id}</p>*/}\n                            {/*    <p>{car.car_name}</p>*/}\n                            {/*    <p>{car.car_category}</p>*/}\n                            {/*    <p>{car.car_rating}</p>*/}\n                            {/*    <p>{car.car_votes}</p>*/}\n                            {/*    <p>{car.location_address}</p>*/}\n                            {/*    <p>{car.location_phone}</p>*/}\n                            {/*</Col>*/}\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>The car</p>\n                            </Col>\n                            <Col>\n                                <h1>{car.car_name}</h1>\n                                <p>{car.car_rating} &#9733; ({car.car_votes} votes)</p>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={2}>\n                                <p style={{textAlign: 'right'}}>Hosted at</p>\n                            </Col>\n                            <Col>\n                                {\n                                    car.location_address.split(';').map((location, index) => (\n                                        <h4 key={index}>{location}</h4>\n                                ))}\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col>\n                        <ReservationForm locationids={car.location_ids.split(';')} locations={car.location_address.split(';')}/>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <LinkContainer to={'/'}>\n                        <a>>> Back to homepage</a>\n                    </LinkContainer>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst EMPTY_CAR = {\n    car_category: \"NULL\",\n    car_id: \"NULL\",\n    car_name: \"NULL\",\n    car_rating: -1,\n    car_votes: -1,\n    location_address: [\"NULL\",\"NULL\",\"NULL\"],\n    location_phone: [\"NULL\",\"NULL\",\"NULL\"]\n}","import react, {useEffect, useState} from 'react';\nimport {Jumbotron, Container, Row, Col} from 'react-bootstrap';\nimport './stylesheets/Template.css';\nimport jQuery from 'jquery';\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport React from \"react\";\nimport Header from \"./Template/Header\";\n\nexport default function SingleLocation(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [location, setLocation] = useState(EMPTY_LOCATION);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",  // Setting return data type\n            method: \"GET\",// Setting request method\n            // TODO: REMOVE HTTP://LOCALHOST WHEN BUILDING\n            url: \"http://localhost:8080/cs122b_spring21_team_16_war/api/single-loc?id=\" + props.match.params.locationId,\n            // url: \"api/single-loc?id=\" + props.match.params.locationId,\n            success: (resultData) => {\n                setLocation(resultData[0]);\n                setLoading(false);\n                console.log(resultData)\n            }\n        });\n    }, [])\n    if(isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n            <Header title={\"Single Location Page\"} />\n            <Container>\n                <Row>\n                    <Col>\n                        <p>{location.cars_ids}</p>\n                        <p>{location.cars_offered}</p>\n                        <p>{location.location_address}</p>\n                        <p>{location.location_id}</p>\n                        <p>{location.location_phone}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <LinkContainer to={'/'}>\n                        <a>>>Back to homepage</a>\n                    </LinkContainer>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst EMPTY_LOCATION = {\n    cars_ids: \"NULL\",\n    cars_offered: \"NULL\",\n    location_address: \"NULL\",\n    location_id: \"NULL\",\n    location_phone: \"NULL\"\n}","import {Button, Form} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport {Redirect} from \"react-router\";\nimport {useState} from \"react\";\nimport jQuery from \"jquery\";\n\nexport default function(props) {\n    const [complete, setComplete] = useState(false);\n    const [query, setQuery] = useState({defaultQuery});\n    if (complete) {\n        props.setModalShow(false);\n        return (<Redirect to={\"/search\" + \"/\" + query.model + \"/\" + query.year + \"/\" + query.make + \"/\" + query.location}/>);\n    }\n    return (\n        <Formik\n            // TODO: When all are empty return movie list\n            initialValues={{}}\n            onSubmit={(async (values) => {\n                // props.setLoading(true);\n                if (values.model == null)\n                    values.model = 'na';\n                if (values.year == null)\n                    values.year = 'na';\n                if (values.make == null)\n                    values.make = 'na';\n                if (values.location == null)\n                    values.location = 'na';\n                setQuery(values);\n                setComplete(true);\n                window.location.reload(false);\n            })}\n        >\n            {({\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Car Model</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"model\"}\n                            id={\"model\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.model}\n                            placeholder={\"Enter model name\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Year</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"year\"}\n                            id={\"year\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.year}\n                            placeholder={\"Enter year\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Make</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"make\"}\n                            id={\"make\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.make}\n                            placeholder={\"Enter make\"}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Car Location</Form.Label>\n                        <Form.Control\n                            type={\"string\"}\n                            name={\"location\"}\n                            id={\"location\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.location}\n                            placeholder={\"Enter location\"}\n                        />\n                    </Form.Group>\n                    <Button variant={\"primary\"} type={\"submit\"}>Search</Button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nconst defaultQuery = {\n    model: \"na\",\n    year: \"na\",\n    make: \"na\",\n    location: \"na\"\n}","import {Modal} from \"react-bootstrap\";\nimport SearchForm from \"./SearchModal/SearchForm\";\n\nexport default function (props) {\n\n    return(\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Search for Car\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <SearchForm setModalShow={props.setModalShow}/>\n            </Modal.Body>\n        </Modal>\n    )\n}","import {useState} from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport SearchModal from \"./Search/SearchModal\";\nimport {Link} from \"react-router-dom\";\n\nexport default function MyNav(props) {\n    const [modalShow, setModalShow] = useState(false);\n\n    const handleClick = () => setModalShow(true);\n\n    return (\n        <div>\n            <SearchModal show={modalShow}\n                         onHide={() => setModalShow(false)}\n                         setModalShow={setModalShow}\n            />\n            <Navbar variant=\"light\" className={\"myNav\"}>\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand>\n                        <img\n                            src={\"https://i.ibb.co/hKLvRdN/Screen-Shot-2021-04-16-at-4-24-19-PM.png\"}\n                            style={{width: \"145px\"}}\n                        />\n                    </Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className={\"mr-auto\"}>\n                        <Nav.Link onClick={handleClick}>Search</Nav.Link>\n                        <LinkContainer to={\"/browse/type\"}>\n                            <Nav.Link>Browse by Vehicle Types</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to={\"/browse/name\"}>\n                            <Nav.Link>Browse by Vehicle Name</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                    <Nav className={\"ml-auto\"}>\n                        {/*// TODO: Connecting search with variable flag*/}\n                        <LinkContainer to=\"/profile\">\n                            <Nav.Link>Profile</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to=\"/mycart\">\n                            <Nav.Link>My Cart</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to=\"/cart\">\n                            <Nav.Link>Sign out</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}","import {Button, ButtonGroup, Col, Container, Dropdown, Row} from \"react-bootstrap\";\nimport CarCard from \"../Home/CarCard\";\n\nexport default function(props) {\n\n    return(\n        <Container fluid>\n            <Row>\n                <Col>\n                    <ButtonGroup>\n                        {\n                            props.options.map((element, index) => (\n                                <Button variant={\"link\"} id={element} onClick={props.handleOptionSelect} key={index}>{element}</Button>\n                            ))\n                        }\n                    </ButtonGroup>\n                </Col>\n            </Row>\n            <Row>\n                {props.cars.map((car, index) => (\n                    <CarCard\n                        key={index}\n                        id={car.car_id}\n                        name={car.car_name}\n                        category={car.car_category}\n                        rating={car.car_rating}\n                        votes={car.car_votes}\n                        locations={car.location_address.split(';')}\n                        locationId={car.location_ids.split(';')}\n                        phone={car.location_phone.split(';')}\n                    />\n                ))}\n            </Row>\n        </Container>\n    )\n}","import {Container, Row, Col, Dropdown} from \"react-bootstrap\";\nimport CarCard from \"./Home/CarCard\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport Header from \"./Template/Header\";\nimport Content from \"./Browse/Content\";\n\nexport default function (props) {\n    const [isLoading, setLoading] = useState(true);\n    const [cars, setCars] = useState([]);\n\n    useEffect(() => {\n        let data;\n        if(props.match.params.query === \"type\") {\n            data = {category: 'pickup'};\n        } else {\n            data = {model: 'a'};\n        }\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            data: data,\n            url: \"http://localhost:8080/cs122b_spring21_team_16_war/api/browse-car\",\n            success: (resultData) => {\n                setCars(resultData);\n                setLoading(false);\n            }\n        });\n    }, [])\n\n    const handleOptionSelect = (event) => {\n        let data;\n\n        if(props.match.params.query === \"type\") {\n            data = {category: event.target.id.toString().toLowerCase()};\n        } else {\n            data = {model: event.target.id.toString()};\n        }\n        console.log(data)\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            data: data,\n            url: \"http://localhost:8080/cs122b_spring21_team_16_war/api/browse-car\",\n            success: (resultData) => {\n                setCars(resultData);\n                setLoading(false);\n                console.log(resultData);\n            }\n        });\n    }\n\n    if (isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n            <Header title={\"Browse by Vehicle \" + props.match.params.query} />\n            {\n                props.match.params.query === \"type\" &&\n                <Content\n                    handleOptionSelect={handleOptionSelect}\n                    cars={cars}\n                    options={[\"Pickup\", \"Wagon\", \"Van\", \"Coupe\", \"Sedan\", \"Hatchback\", \"Convertible\", \"SUV\"]}\n                />\n            }\n            {\n                props.match.params.query === \"name\" &&\n                <Content\n                    handleOptionSelect={handleOptionSelect}\n                    cars={cars}\n                    options={[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]}\n                />\n            }\n\n        </div>\n    );\n}\n","import Header from \"./Template/Header\";\nimport {useEffect, useState} from \"react\";\nimport jQuery from \"jquery\";\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport CarCard from \"./Home/CarCard\";\n\nexport default function(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [cars, setCars] = useState([]);\n\n    useEffect(() => {\n        jQuery.ajax({\n            dataType: \"json\",\n            method: \"GET\",\n            data: removeEmpty(props.match.params),\n            url: \"http://localhost:8080/cs122b_spring21_team_16_war/api/search-car\",\n            success: (resultData) => {\n                if (resultData.status === \"fail\")\n                    props.setError(\"Login failed (Invalid username/password\");\n                else\n                    setCars(resultData);\n                setLoading(false);\n            }\n            // setComplete(true);\n        });\n    }, [])\n\n    if (isLoading) {\n        return (<div>Loading...</div>)\n    }\n    return (\n        <div>\n            <Header title={\"Search Results\"}/>\n            <Container fluid>\n                <Row>\n                    <Col>\n                        <p>Model: {props.match.params.model}</p>\n                        <p>Year: {props.match.params.year}</p>\n                        <p>Make: {props.match.params.make}</p>\n                        <p>Location: {props.match.params.location}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    {cars.map((car, index) => (\n                        <CarCard\n                            key={index}\n                            id={car.car_id}\n                            name={car.car_name}\n                            category={car.car_category}\n                            rating={car.car_rating}\n                            votes={car.car_votes}\n                            locations={car.location_address.split(';')}\n                            locationId={car.location_ids.split(';')}\n                            phone={car.location_phone.split(';')}\n                        />\n                    ))}\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nfunction removeEmpty(object) {\n    if(object.model === \"na\" || object.model == null)\n        delete object.model;\n    if(object.year === \"na\" || object.year == null)\n        delete object.year;\n    if(object.make === \"na\" || object.make == null)\n        delete object.make;\n    if(object.location === \"na\" || object.location == null)\n        delete object.location;\n    return object;\n}","import Header from \"./Template/Header\";\n\nexport default function() {\n    return (\n        <Header title={\"My Cart\"}/>\n    )\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport SingleCar from './components/SingleCar';\nimport SingleLocation from './components/SingleLocation';\nimport Navbar from './components/NavBar';\nimport Browse from \"./components/Browse\";\nimport SearchResults from \"./components/SearchResults\";\nimport MyCart from \"./components/MyCart\";\n\nfunction App() {\n    return (\n        <Router basename={\"/cs122b_spring21_team_16_war\"}>\n            <Switch>\n                <Route exact path={\"/(login)\"} component={LoginContainer} />\n                <Route component={DefaultContainer} />\n            </Switch>\n        </Router>\n    );\n}\n\nconst LoginContainer = () => (\n    <div>\n        <Route path=\"/login\" render={() => <Login />} />\n    </div>\n)\n\nconst DefaultContainer = () => (\n    <div>\n        <Navbar />\n        <Route path=\"/browse/:query\" render={(props) => <Browse {...props} />} />\n        <Route path=\"/browse/:query/:category\" render={(props) => <Browse {...props} />} />\n        <Route path=\"/\" exact render={() => <Home />} />\n        <Route path=\"/search/:model?/:year?/:make?/:location?\" render={(props) => <SearchResults {...props}/>} />\n        <Route path=\"/mycart\" render={() => <MyCart />} />\n        <Route path=\"/cars/:carId\" render={(props) => <SingleCar {...props} />} />\n        <Route path=\"/locations/:locationId\" render={(props) => <SingleLocation {...props} />} />\n    </div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}